/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
int x = 0;
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_1(char const * restrict format, unsigned int param0,
                unsigned int param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_2(char const * restrict format, int param0, int param1);

int main(void)
{
  int __retres;
  int tmp;
  uintptr_t b = (uintptr_t)(& x);
  uintptr_t a = (uintptr_t)0x60102C;
  printf("Addresses: b=0x%X a=0x%X\n",b,a); /* printf_va_1 */
  tmp = memcmp((void const *)(& b),(void const *)(& a),sizeof(b));
  if (tmp == 0) {
    int *q = (int *)a;
    *q = 123;
    printf("*((int*)b=%d  *q=%d\n",*((int *)b),*q); /* printf_va_2 */
  }
  __retres = 0;
  return __retres;
}


