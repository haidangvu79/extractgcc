/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_1(char const * restrict format, unsigned int param0);

void f(uint32_t *p1, float *p2)
{
  *p1 = (uint32_t)2;
  *p2 = (float)3.0;
  printf("f: *p1 = %u\n",*p1); /* printf_va_1 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_2(char const * restrict format, unsigned int param0,
                unsigned int param1, double param2);

int main(void)
{
  int __retres;
  float *p2;
  __FC_assert((sizeof(uint32_t) == sizeof(float)) != 0,"effective_type_1.c",
              7,"sizeof(uint32_t)==sizeof(float)");
  uint32_t i = (uint32_t)1;
  uint32_t *p1 = & i;
  p2 = (float *)p1;
  f(p1,p2);
  printf("i=%u  *p1=%u  *p2=%f\n",i,*p1,(double)*p2); /* printf_va_2 */
  __retres = 0;
  return __retres;
}


