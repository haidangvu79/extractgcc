/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
union __anonunion_un_1 {
   int i ;
   float f ;
};
typedef union __anonunion_un_1 un;
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_1(char const * restrict format, double param0, double param1);

int main(void)
{
  int __retres;
  un u = {.i = 1};
  int *pi = & u.i;
  un *p = (un *)pi;
  p->f = (float)2.0;
  printf("u.f=%f  p->f=%f\n",(double)u.f,(double)p->f); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


