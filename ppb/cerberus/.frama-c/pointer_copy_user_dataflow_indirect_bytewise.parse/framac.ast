/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
int x = 1;
void user_memcpy2(unsigned char *dest, unsigned char *src, size_t n)
{
  while (n > (size_t)0) {
    *dest = (unsigned char)(((int)*src ^ 1) ^ 1);
    src ++;
    dest ++;
    n -= (size_t)1;
  }
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_1(char const * restrict format, int param0, int param1);

int main(void)
{
  int __retres;
  int *q;
  int *p = & x;
  user_memcpy2((unsigned char *)(& q),(unsigned char *)(& p),sizeof(p));
  *q = 11;
  printf("*p=%d  *q=%d\n",*p,*q); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


