/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
int *f(void)
{
  int *__retres;
  int a;
  __retres = & a;
  return __retres;
}

int *g(void)
{
  int *__retres;
  int a;
  __retres = & a;
  return __retres;
}

/*@ requires valid_read_string(param0);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_1(char const * restrict format, char *param0);

int main(void)
{
  int __retres;
  int *tmp;
  int *tmp_0;
  char const *tmp_1;
  tmp = f();
  tmp_0 = g();
  _Bool b = (_Bool)(tmp == tmp_0);
  if (b) tmp_1 = "true"; else tmp_1 = "false";
  printf("(f()==g())=%s\n",(char *)tmp_1); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


