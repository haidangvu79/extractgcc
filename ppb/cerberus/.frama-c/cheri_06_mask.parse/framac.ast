/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
int x = 1;
/*@ requires valid_read_string(param1);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: *(param1 + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, *(param1 + (0 ..)), param0;
 */
int printf_va_1(char const * restrict format, int param0, char *param1,
                int param2);

int main(void)
{
  int __retres;
  char const *tmp;
  int *p = & x;
  uintptr_t i = (uintptr_t)p;
  __FC_assert((__alignof__(int) >= (unsigned int)4) != 0,"cheri_06_mask.c",8,
              "__alignof(int) >= 4");
  __FC_assert(((i & 3u) == 0u) != 0,"cheri_06_mask.c",9,"(i & 3u) == 0u");
  i |= 1u;
  int *q = (int *)i;
  uintptr_t j = (uintptr_t)q & ~ 3u;
  int *r = (int *)j;
  int y = *r;
  int b = r == p;
  *r = 2;
  int z = *p;
  ;
  if (b) tmp = "true"; else tmp = "false";
  ;
  printf("y=%i (r==p)=%s z=%i\n",y,(char *)tmp,z); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


