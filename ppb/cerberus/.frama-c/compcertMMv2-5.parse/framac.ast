/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
union __anonunion_u_1 {
   float f ;
   unsigned int i ;
};
float fabs_single(float x)
{
  float __retres;
  union __anonunion_u_1 u;
  u.f = x;
  u.i &= (unsigned int)0x7FFFFFFF;
  __retres = u.f;
  return __retres;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_1(char const * restrict format, double param0);

int main(void)
{
  int __retres;
  float g;
  float f = (float)(- 1.0);
  g = fabs_single(f);
  printf("g=%f\n",(double)g); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


