/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
struct __anonstruct_st_1 {
   char c ;
   float f ;
   int i ;
};
typedef struct __anonstruct_st_1 st;
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_1(char const * restrict format, unsigned int param0);

int main(void)
{
  int __retres;
  size_t offset_padding = 0U + sizeof(char);
  if (4U > offset_padding) {
    st s;
    unsigned char *p = (unsigned char *)(& s) + offset_padding;
    *p = (unsigned char)0;
    s.c = (char)'A';
    s.f = (float)1.0;
    s.i = 42;
    unsigned char c3 = *p;
    printf("c3=0x%x\n",(unsigned int)((int)c3)); /* printf_va_1 */
  }
  __retres = 0;
  return __retres;
}


