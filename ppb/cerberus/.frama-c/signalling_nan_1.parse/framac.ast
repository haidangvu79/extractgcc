/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
union a_union {
   long double ld ;
   unsigned char cs[10] ;
};
unsigned char snan[10] =
  {(unsigned char)0xFF,
   (unsigned char)0xFF,
   (unsigned char)0b10111111,
   (unsigned char)0xFF,
   (unsigned char)0xFF,
   (unsigned char)0xFF,
   (unsigned char)0xFF,
   (unsigned char)0xFF,
   (unsigned char)0xFF,
   (unsigned char)0xFF};
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_1(char const * restrict format, long param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_2(char const * restrict format, unsigned int param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_3(char const * restrict format);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_4(char const * restrict format, long double param0);

int main(void)
{
  int __retres;
  union a_union u;
  int i;
  printf("sizeof(long double)=%ld\n",(long)sizeof(long double)); /* printf_va_1 */
  i = 0;
  while (i < 10) {
    u.cs[i] = snan[9 - i];
    i ++;
  }
  i = 0;
  while (i < 10) {
    printf("0x%x ",(unsigned int)((int)u.cs[9 - i])); /* printf_va_2 */
    i ++;
  }
  printf("\n"); /* printf_va_3 */
  long double ld = u.ld;
  ld += (long double)1.0;
  printf("ld=%Lf\n",ld); /* printf_va_4 */
  __retres = 0;
  return __retres;
}


