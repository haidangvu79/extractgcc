/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
int x = 1;
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_1(char const * restrict format, int param0, int param1);

int main(void)
{
  int __retres;
  uintptr_t bit;
  uintptr_t j;
  int k;
  int *p = & x;
  uintptr_t i = (uintptr_t)p;
  int uintptr_t_width = (int)(sizeof(uintptr_t) * (unsigned int)8);
  j = (uintptr_t)0;
  k = 0;
  while (k < uintptr_t_width) {
    bit = (i & ((uintptr_t)1 << k)) >> k;
    j |= bit << k;
    k ++;
  }
  int *q = (int *)j;
  *q = 11;
  printf("*p=%d  *q=%d\n",*p,*q); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


