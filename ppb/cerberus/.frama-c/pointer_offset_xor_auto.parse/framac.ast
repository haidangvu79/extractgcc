/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
/*@ requires valid_read_string(param3);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param3 + (0 ..))),
            (indirect: param2), (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param3 + (0 ..)), param2, param1, param0;
 */
int printf_va_1(char const * restrict format, int param0, int param1,
                int param2, char *param3);

int main(void)
{
  int __retres;
  char const *tmp;
  int x = 1;
  int y = 2;
  int *p = & x;
  int *q = & y;
  uintptr_t i = (uintptr_t)p;
  uintptr_t j = (uintptr_t)q;
  uintptr_t k = i ^ j;
  uintptr_t l = k ^ i;
  int *r = (int *)l;
  *r = 11;
  _Bool b = (_Bool)(r == q);
  if (b) tmp = "true"; else tmp = "false";
  ;
  ;
  ;
  printf("x=%i y=%i *r=%i (r==p)=%s\n",x,y,*r,(char *)tmp); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


