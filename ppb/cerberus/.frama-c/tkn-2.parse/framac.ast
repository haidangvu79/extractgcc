/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
typedef unsigned long word_t;
word_t reverse(word_t *i)
{
  word_t j = (word_t)0;
  while (i) {
    word_t *k = (word_t *)*i;
    *i = j;
    j = (word_t)i;
    i = k;
  }
  return j;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_1(char const * restrict format, unsigned long param0,
                unsigned long param1, unsigned long param2);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param3),
            (indirect: param2), (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param3, param2, param1, param0;
 */
int printf_va_2(char const * restrict format, unsigned long param0,
                unsigned long param1, unsigned long param2,
                unsigned long param3);

int main(void)
{
  int __retres;
  word_t a[3];
  word_t b;
  a[0] = (word_t)(& a[1]);
  a[1] = (word_t)(& a[2]);
  a[2] = (word_t)0;
  printf("a[0]=%lu a[1]=%lu a[2]=%lu\n",a[0],a[1],a[2]); /* printf_va_1 */
  b = reverse(a);
  printf("a[0]=%lu a[1]=%lu a[2]=%lu b=%lu\n",a[0],a[1],a[2],b); /* printf_va_2 */
  __retres = 0;
  return __retres;
}


