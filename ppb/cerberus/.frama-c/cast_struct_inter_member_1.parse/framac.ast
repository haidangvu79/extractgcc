/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
struct __anonstruct_st_1 {
   float f ;
   int i ;
};
typedef struct __anonstruct_st_1 st;
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_1(char const * restrict format, double param0, double param1,
                int param2);

int main(void)
{
  int __retres;
  st s = {.f = (float)1.0, .i = 1};
  int *pi = & s.i;
  unsigned char *pci = (unsigned char *)pi;
  unsigned char *pcf = (pci - 4U) + 0U;
  float *pf = (float *)pcf;
  *pf = (float)2.0;
  printf("s.f=%f *pf=%f  s.i=%i\n",(double)s.f,(double)*pf,s.i); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


