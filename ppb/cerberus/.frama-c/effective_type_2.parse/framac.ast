/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
struct __anonstruct_st1_1 {
   int i1 ;
};
typedef struct __anonstruct_st1_1 st1;
struct __anonstruct_st2_2 {
   int i2 ;
};
typedef struct __anonstruct_st2_2 st2;
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_1(char const * restrict format, int param0);

void f(st1 *s1p, st2 *s2p)
{
  s1p->i1 = 2;
  s2p->i2 = 3;
  printf("f: s1p->i1 = %i\n",s1p->i1); /* printf_va_1 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_2(char const * restrict format, int param0, int param1,
                int param2);

int main(void)
{
  int __retres;
  st2 *s2p;
  st1 s = {.i1 = 1};
  st1 *s1p = & s;
  s2p = (st2 *)s1p;
  f(s1p,s2p);
  printf("s.i1=%i  s1p->i1=%i  s2p->i2=%i\n",s.i1,s1p->i1,s2p->i2); /* printf_va_2 */
  __retres = 0;
  return __retres;
}


