/* Generated by Frama-C */
#include "assert.h"
#include "errno.h"
#include "inttypes.h"
#include "stdarg.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
#include "string.h"
#include "strings.h"
struct __anonstruct_st_1 {
   char c ;
   float f ;
};
typedef struct __anonstruct_st_1 st;
void f(char *cp, float *fp)
{
  *cp = (char)'A';
  *fp = (float)1.0;
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_1(char const * restrict format, unsigned int param0,
                double param1);

int main(void)
{
  int __retres;
  st s1;
  st s2;
  f(& s1.c,& s1.f);
  s2 = s1;
  printf("s2.c=0x%x  s2.f=%f\n",(unsigned int)((int)s2.c),(double)s2.f); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


