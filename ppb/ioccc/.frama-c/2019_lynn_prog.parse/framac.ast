/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
typedef unsigned int P;
enum __anonenum_1 {
    L = 1 << 26
};
char *v;
char *y =
  (char *)"33Yb59@&iBFApt;[[h3V19\\3<:4cJ!U 2eT18pC,Qqik4J:sh?HUXMrR(-l0R\"!eKZcI!@E(@B,C/*!aogn5LbK/e=2CmReb+6,]kD!iOC9DEOC9Dc1EV6976c?&s)Be;P;E^tl2eUYkg*#Yf:6^d[Mg_P;VGCr823^L_<X+j2,%nD20Ls lmpi&I(*hV=+p aTO`r.b1<i[/R\\t1,KBt)\\%;\\@27H>^#d6B!tb-on27d%i_OS5(W5eV-=M14kYO);Fe7k!N41<iX*T,kHW,&)_l&L)\'0:Jj%j7^h+JU /9pZn&Td:&T%\'TE<7>LW%m/R\\rON3-=G]^akjT778YCJ7B8e-5E#RX R=Ig8#/pDdAI;=a[ ISbp\'t+ZLJ;lUO71C)b5[Y)qTWmFJ)G1ehmS<.`n3RnE IG+G_A`CE=?hZU)bScgt7R3GNs+V(HQLL_R)n4;]#cUR.p>5!^4T3pQg^o//WLATCE18mSUme[Q<53e:\')Q_%<L$1lKOnFD(R3%*jj85VW+#8Wt*Ud,1D7AKcdh<9r%igC$2</HD7X$K_0Rr/>L.*D2%;[0B+#8UANT1.tSd/^@L$&a6^g@jYNMC7O<rPWO5AfA;C\'9WnLn9E:0d:R\\hAZ^m=/09d.R$Jd%:Gp hB-g4&N!VO)$;iED1:F`^`UrnWCSZ!L$Tdma!_hn7H0F$^MT(-Ln9F_Ljfp9*h8Er!<.g.h_7@b0l03?a+]`=dIoY>WCKOk&#[9FCQ#WFoga(tK<[PG6@5k2KY\\ oW\':M;e//kd\"[l,_V?UlZ,m(Hh?O81mhM!G18 ]7m?X7e^[7EZYj[;kR,YXD\\X,!k6.HF8Z(V^^nBYea^NIL:]lG0(/\\Ik<m`>jPam;F-A,(tVN+bG@<L\'J 1D8dE*hN87:TsccSKVE7KP+k8^5qZIkJG_fH_$MS--5(!*St/1:b+g8(/*";
char *T;
char *n =
  (char *)" $6I7H#v Jw\t{\v}\f;\t \v }\f }\f \f \f \v }\f \v\t } }\t ;\f }\f \f\t {\f\v } \f\t }\f ;\t \f\f \t\t {\f {\v\v \t \v\v\v \f }\v\v } }\v\v \f\v\v \f\v\v ;\v\v \v ;\v\v \t\v\v }\v\v \v\t ;\v\v \t\v\v }\v\v }\v\v ;\f }\t }\t }\v\v ;\f }\t \f\f \v\t \f\f \t\v\v }\v\v ;\v\v \t\v\v }\v\v {\t \f\f \f\v\v \t\v\v }\t ;\f }\f }\v\v \t\v\v ; \f\f ;\f }\f \t\f }\f ;\v\v \f\v\v {\t }\f \f\v\v \v {\f\v }\v\v ;\v\v }\f {\f\v ;\t {\f\v \f\v\v ;\t {\f\v \f\t }\f \v ;\v\v ;\v\v ;\t\v {\v\v {\f\v }\f\v }\v\v \t\f\v ;\v\v \t\v\v ;\v\v {\f\v \t\v\v } \f\v\v \f\f\v {\v} \f\v\v }\v\v \v\v} }\f \f\f {\t\v ;\f \f\f \v {\t \f\f \t\f ;\f } {\t \t\f } }\f \v\f} }\t \f \f \f\f ;\v} ;\t \f\t }\f }\t }\t\v \f\v} }\f} }\f \v\f} \f\t }\t {\f}  :!#$%&*+./<=>?@\\^|-~\t\t\t \v\v\v \f\t   \n\t\v\f} {\v\v {\v\v \f\f }\f  --\t\t\t \f\t ;\f} ;\f \v\t ;\f }\f \v\t }\f \f\t \v\f\v ;\v\v {\f\v {\f\v \v\f\v } }\v\v \f\v\v }\f {\f\v \v\f} \t\v\v ;\v\v \t\t }\v\t \t\v\v \v\v\v  \\\'\"\t\t\f} {\f\v ;\f \t\t }\v{\f \v\v\v }\t} }\v\v \v\v\v \t\f} ;\v\f \v\f} }\f} \f\f\v \f\v\f }\f} }\f  :\t\f\v} \v\t \v\v\v }\f }\t }\f \v\v\t \f\v\t }\f\v \v\f\v {\f\t \f\t{\f \v\f\v ;\f\f \v\v\t \f\v\f \t\v\t  of\t\v\v\v ;\t\v \f\t\v } \f\f {\t\v }\t\v }\t\v \f\f \f\t }\f\v \f\v} {\f\v \t\v\f \f\f }\f \f\v\v ;\t\v \t\v\v \v\t {\f\t {\f\t }\f }\t ;\v} \t\v} {\v} ;\f }\f \f\f }\t\f \t\v\f }\v} \f\v} \f\v\f \f\f \v\v\v ;\t }\f} \t\v\v \t\f\v {\t  ->\t\v\v\v \f\t{\f \t\t{\f \t\v\f \v\f\v \v\t\v ;\t \f\v} ;\t \f\f} }\f} \f\v; \t\f} \v\f\v \t\f\f }\t \f\f} }\f} \v\t \t\v} \t\t {\f} \t\f\v \v\f\f \f\f} \v\v; }\f\f \t\v} }\f} }\f} }\f} {\f\v }\v} \f\v} \f\v} ;\f\v \f\v} \v\f\v {\f\v }\v} ;\t\v ;\t\v {\f} ;\f\v ;\t\v \f\f} ;\f\f \f\f} }\v; {\t} {\f \t ;\f ;  \v\t\v \t\v} \f\f\v }\f} }\f} }\f} }\f} ;\f} \f\f} \f\v; }\f\f {\t\f {\v} ;\f  let\t;\f  in\t\t\f }\f ;\f} \f\f} \v\v; }\f\f } {\v} ;\f  case\t;\f }\v\v \t\f \v\f} \v\t ;\f} \f\f} }\t {\f} {\v\v \v\f} {\t ;\f} \f\f} \f\v; {\t\f {\v} {\t\v }\v\t {\t \f\f ;\t }\f} }\f} \f\f} }\f\v \t\t \t\f} ;\f} \f\f} ;\f} \f\f} }\f\f }\f\f \t\t} \f\f\f \t\t \v\t \t\v;  \f\v; \t\v; \t \v } {\f; {\f; {\f; } \t } } \f\v; } }\f\f \v \f\v;  } \v {\f ;\v\v  {\f; } } \v\f; {\f; }\f; } }\f; \v }\f; \v \f\f }\f; \f\f \v\f; }\v; ;\v; \f\f }\f; ;\f \t ;\t }\f; } }\f ;\f} \f\v\v  : <= * + - /\t}\f; {\f\v }\f \t\f} {\v} \v\t} \v\f; }\f\f \f\t\v {\t} \t\f} ;\f\v }\t  data\t\v\f\f \v\t \v\t} \v\v; }\f; ;\t} {\v\v {\f; \v\t\f {\t\f \v\t\f }\f\f \v\v; ;\v; \f\t\v }\t} \v\t} }\f; \v\v\v \v\t} ;\f } ;\f} {\t} {\t} }\v\v \v\t }\f\v \v\t ;\v\v ;\t{\f \v\t} } {\t \v }\t} \v\t} {\f; \t\f ;\f} }\t} \v\t} {\t\f {\t\v \f\v\v \t\f \t\v\f ;\f; #define x \\";
P I;
P C;
P K = (P)24;
P M;
P E;
P j[L] = {(P)0};
P *D = & j[L / 2];
P *i = & j[L] - 3;
P w(P __0)
{
  P __retres;
  __retres = j[*(i + __0) + (P)1];
  return __retres;
}

void A(void)
{
  D = & j[*(i + 1)];
  *D = w((P)1);
  D ++;
  *D = *(i + 1);
  i ++;
  return;
}

void a(void)
{
  D = & j[*(i + 2)];
  *D = w((P)2);
  D ++;
  *D = w((P)1);
  i += 2;
  return;
}

P l(P __0, P E_0)
{
  P __retres;
  P tmp;
  P tmp_0;
  tmp = K;
  K ++;
  j[tmp] = __0;
  tmp_0 = K;
  K ++;
  j[tmp_0] = E_0;
  __retres = K - (P)2;
  return __retres;
}

int S;
void t(void)
{
  D = & j[*(i + 1)];
  *D = (P)9;
  D ++;
  S = getchar();
  if (S < 0) *D = (P)8;
  else {
    P tmp_2;
    P tmp;
    P tmp_1;
    P tmp_0;
    tmp = l((P)7,(P)0);
    tmp_0 = l((P)1,(P)S);
    tmp_1 = l((P)17,tmp_0);
    tmp_2 = l(tmp_1,tmp);
    *D = tmp_2;
  }
  i ++;
  return;
}

P U(P __0)
{
  P __retres;
  P tmp;
  tmp = w(__0);
  ;
  __retres = j[tmp + (P)1];
  return __retres;
}

void _(void)
{
  P tmp;
  P tmp_0;
  D = & j[*(i + 2)];
  *D = (P)9;
  D ++;
  tmp = U((P)1);
  tmp_0 = U((P)2);
  if (tmp > tmp_0) *D = l((P)8,(P)9); else *D = (P)8;
  i += 2;
  return;
}

void b(void)
{
  D = & j[*(i + 2)];
  *D = w((P)2);
  D ++;
  *D = *(i + 1);
  i += 2;
  return;
}

P G(P __0, P S_0)
{
  P tmp_1;
  P tmp;
  P tmp_0;
  tmp = w(S_0);
  tmp_0 = w(__0);
  tmp_1 = l(tmp_0,tmp);
  return tmp_1;
}

void p(void)
{
  P tmp;
  P tmp_0;
  D = & j[*(i + 2)];
  *D = (P)1;
  D ++;
  tmp = U((P)1);
  tmp_0 = U((P)2);
  *D = tmp * tmp_0;
  i += 2;
  return;
}

void c(void)
{
  D = & j[*(i + 3)];
  *D = w((P)1);
  D ++;
  *D = G((P)2,(P)3);
  i += 3;
  return;
}

void u(void)
{
  D = & j[*(i + 3)];
  *D = G((P)1,(P)3);
  D ++;
  *D = w((P)2);
  i += 3;
  return;
}

P N(P l_0, P L, P __0)
{
  P tmp_0;
  I = (P)0;
  while ((int)*T - (int)*(v + I)) I ++;
  T ++;
  if (I / (P)6) tmp_0 = l_0;
  else tmp_0 = N(l_0 + (I / __0) * L,(L * (P)6) / __0,(P)3 - __0);
  return tmp_0;
}

void s(void)
{
  D = & j[*(i + 3)];
  *D = G((P)2,(P)3);
  D ++;
  *D = w((P)1);
  i += 3;
  return;
}

void m(void)
{
  D = & j[*(i + 4)];
  *D = G((P)4,(P)1);
  D ++;
  *D = w((P)2);
  i += 4;
  return;
}

void o(void)
{
  P tmp;
  P tmp_0;
  D = & j[*(i + 2)];
  *D = (P)1;
  D ++;
  tmp = U((P)1);
  tmp_0 = U((P)2);
  *D = tmp - tmp_0;
  i += 2;
  return;
}

void f(void)
{
  D = & j[*(i + 3)];
  *D = G((P)1,(P)3);
  D ++;
  *D = G((P)2,(P)3);
  i += 3;
  return;
}

P Z(void)
{
  char *tmp;
  P tmp_4;
  tmp = T;
  T ++;
  P __0 = (P)*tmp;
  if (__0 - (P)9) {
    P tmp_3;
    P tmp_0;
    P tmp_2;
    P tmp_1;
    tmp_0 = Z();
    tmp_1 = l((P)1,__0);
    tmp_2 = l((P)17,tmp_1);
    tmp_3 = l(tmp_2,tmp_0);
    tmp_4 = tmp_3;
  }
  else tmp_4 = (P)8;
  return tmp_4;
}

void d(void)
{
  D = & j[*(i + 2)];
  *D = w((P)1);
  D ++;
  *D = w((P)2);
  i += 2;
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_1(char const * restrict format, unsigned int param0);

void R(void)
{
  int tmp_1;
  P tmp;
  char const *tmp_0;
  P tmp_2;
  D = & j[*(i + 2)];
  tmp = U((P)1);
  if (E) tmp_0 = "%c"; else tmp_0 = "%u,";
  tmp_1 = printf(tmp_0,tmp); /* printf_va_1 */
  tmp_2 = w((P)2);
  *D = l(tmp_2,(P)tmp_1);
  D ++;
  *D = l((P)23,(P)9);
  i += 2;
  return;
}

P W(P __0)
{
  int tmp_1;
  P tmp_12;
  tmp_1 = S;
  S --;
  ;
  if (! tmp_1) {
    M = (P)0;
    C = (P)5;
    while (1) {
      P tmp_0;
      char *tmp;
      tmp_0 = C;
      C --;
      ;
      if (! tmp_0) break;
      tmp = y;
      y ++;
      M = ((P)85 * M + (P)*tmp) - (P)32;
    }
    S = 31;
  }
  I = __0 * (P)2 + (P)(! (! (M & (unsigned int)(1 << S))));
  __0 = (P)0;
  while (1) {
    C = (P)((int)*(n + __0) - 9);
    if (C) {
      if (! ((C - I) - (P)23)) break;
    }
    else break;
    __0 ++;
  }
  if (C) {
    P tmp_10;
    if (__0) {
      P tmp_7;
      __0 --;
      if (__0 < (P)2) {
        P tmp_6;
        C = N((P)0,(P)1,(P)1);
        if (__0) tmp_6 = l(__0,C);
        else {
          P tmp_5;
          if (C) {
            P tmp_3;
            if (C < (P)8) tmp_3 = C + (P)15; else tmp_3 = *((D - C) + 7);
            tmp_5 = tmp_3;
          }
          else tmp_5 = Z();
          tmp_6 = tmp_5;
        }
        tmp_7 = tmp_6;
      }
      else tmp_7 = __0;
      tmp_10 = tmp_7;
    }
    else {
      P tmp_9;
      P tmp_8;
      __0 = W((P)0);
      tmp_8 = W((P)0);
      ;
      tmp_9 = l(__0,tmp_8);
      tmp_10 = tmp_9;
    }
    tmp_12 = tmp_10;
  }
  else tmp_12 = W(I);
  return tmp_12;
}

void g(void)
{
  P tmp;
  P tmp_0;
  D = & j[*(i + 2)];
  *D = (P)1;
  D ++;
  tmp = U((P)1);
  tmp_0 = U((P)2);
  *D = tmp / tmp_0;
  i += 2;
  return;
}

void r(void)
{
  P tmp;
  P tmp_0;
  D = & j[*(i + 2)];
  *D = (P)1;
  D ++;
  tmp = U((P)1);
  tmp_0 = U((P)2);
  *D = tmp + tmp_0;
  i += 2;
  return;
}

void e(void)
{
  D = & j[*(i + 2)];
  *D = (P)9;
  D ++;
  *D = w((P)1);
  i += 2;
  return;
}

void O(void)
{
  P tmp;
  D = & j[*(i + 2)];
  *D = w((P)2);
  D ++;
  ;
  tmp = w((P)1);
  *D = l(tmp,M - (P)8);
  i += 2;
  return;
}

int main(void)
{
  P tmp_0;
  P tmp_3;
  P tmp_2;
  P tmp_1;
  int tmp_5;
  v = n + 12;
  E = j[0];
  if (E) {
    D = & j[2];
    K = E;
  }
  else {
    T = v + 7;
    while (1) {
      P tmp;
      tmp = W((P)0);
      *D = tmp;
      if (! tmp) break;
      D ++;
    }
    puts((char const *)T);
  }
  tmp_0 = l((P)23,(P)9);
  tmp_1 = l((P)7,(P)0);
  D --;
  ;
  tmp_2 = l(*D,tmp_1);
  tmp_3 = l(tmp_2,(P)0);
  *i = l(tmp_3,tmp_0);
  while (1) {
    M = *i;
    if (! M) break;
    if (M < (P)24) {
      void (*__constr_expr_0[18])() =
        {(void (*)())(& O),
         (void (*)())(& b),
         (void (*)())(& f),
         (void (*)())(& u),
         (void (*)())(& s),
         (void (*)())(& c),
         (void (*)())(& a),
         (void (*)())(& t),
         (void (*)())(& e),
         (void (*)())(& d),
         (void (*)())(& _),
         (void (*)())(& p),
         (void (*)())(& r),
         (void (*)())(& o),
         (void (*)())(& g),
         (void (*)())(& R),
         (void (*)())(& A),
         (void (*)())(& m)};
      (*(__constr_expr_0[M * (P)(M < (P)18)]))();
    }
    else {
      i --;
      *i = j[M];
      P tmp_4 = *i;
    }
  }
  if (E) tmp_5 = 1;
  else {
    int tmp_4_0;
    tmp_4_0 = puts((char const *)y);
    if (tmp_4_0) tmp_5 = 1; else tmp_5 = 0;
  }
  return tmp_5;
}


