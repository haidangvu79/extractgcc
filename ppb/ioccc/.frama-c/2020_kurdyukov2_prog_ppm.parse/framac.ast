/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdint.h"
#include "stdio.h"
#include "stdlib.h"
struct __anonstruct_P_1 {
   uint16_t x ;
   uint16_t y ;
   uint16_t w ;
   uint16_t h ;
   uint8_t c[4] ;
   int64_t d ;
};
/*@ requires valid_read_string(format);
    assigns \result, stream->__fc_FILE_data;
    assigns \result
      \from (indirect: stream->__fc_FILE_id),
            (indirect: stream->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns stream->__fc_FILE_data
      \from (indirect: stream->__fc_FILE_id), stream->__fc_FILE_data,
            (indirect: *(format + (0 ..))), param1, param0;
 */
int fprintf_va_1(FILE * restrict stream, char const * restrict format,
                 int param0, int param1);

int main(int c, char **V)
{
  int __retres;
  while (c == 4) {
    struct __anonstruct_P_1 *P;
    struct __anonstruct_P_1 *N;
    struct __anonstruct_P_1 *X;
    struct __anonstruct_P_1 o;
    void *O;
    void *F;
    int64_t *p;
    int64_t e;
    int64_t f;
    int64_t u;
    int64_t K;
    int64_t L;
    int64_t *t;
    int64_t Q;
    uint8_t *d;
    int tmp;
    intptr_t w;
    intptr_t h;
    intptr_t s;
    intptr_t S;
    intptr_t j;
    intptr_t y;
    intptr_t v;
    intptr_t q;
    intptr_t l;
    intptr_t k;
    intptr_t z;
    int tmp_8;
    uint16_t tmp_44;
    int64_t U = (int64_t)1;
    V ++;
    ;
    tmp = atoi((char const *)*V);
    intptr_t n = (intptr_t)tmp;
    intptr_t b = (intptr_t)3;
    intptr_t i = (intptr_t)0;
    intptr_t x = (intptr_t)0;
    V ++;
    ;
    F = (void *)fopen((char const *)*V,"rb");
    if (! F) break;
    tmp_8 = fgetc((FILE *)F);
    if (tmp_8 == 'P') {
      int tmp_7;
      k = (intptr_t)0;
      i = (intptr_t)(-0);
      while (! k) {
        while (1) {
          int tmp_3;
          int tmp_6;
          intptr_t tmp_4;
          tmp_3 = fgetc((FILE *)F);
          z = (intptr_t)tmp_3;
          tmp_4 = k;
          k ++;
          ;
          if (tmp_4) {
            int tmp_5;
            if (z - (intptr_t)'\n') 
              if (z - (intptr_t)(-1)) tmp_5 = 1; else tmp_5 = 0;
            else tmp_5 = 0;
            tmp_6 = tmp_5;
          }
          else tmp_6 = z == (intptr_t)'#';
          if (! tmp_6) break;
        }
        if (z - (intptr_t)' ') {
          if (z - (intptr_t)'\n') {
            if (z - (intptr_t)'\r') {
              if (z - (intptr_t)'\t') {
                if (z - (intptr_t)(-1)) {
                  intptr_t tmp_1;
                  if (z < (intptr_t)'0') {
                    i = (intptr_t)(-1);
                    tmp_1 = i;
                  }
                  else 
                    if (z > (intptr_t)'9') {
                      i = (intptr_t)(-1);
                      tmp_1 = i;
                    }
                    else {
                      intptr_t tmp_0;
                      if (i < (intptr_t)0) tmp_0 = (intptr_t)0;
                      else tmp_0 = i * (intptr_t)10;
                      i = (tmp_0 + z) - (intptr_t)'0';
                      if (i >> 15) {
                        i = (intptr_t)(-1);
                        tmp_1 = i;
                      }
                      else tmp_1 = (intptr_t)0;
                    }
                  k = tmp_1;
                }
                else goto _LAND_2;
              }
              else goto _LAND_2;
            }
            else goto _LAND_2;
          }
          else goto _LAND_2;
        }
        else {
          int tmp_2;
          _LAND_2:
          if (i >= (intptr_t)0) tmp_2 = 1;
          else 
            if (z >> 8) tmp_2 = 1; else tmp_2 = 0;
          k = (intptr_t)tmp_2;
        }
      }
      if (i - (intptr_t)3) 
        if (i - (intptr_t)6) tmp_7 = 1; else tmp_7 = 0;
      else tmp_7 = 0;
      if (tmp_7) break;
    }
    k = (intptr_t)0;
    w = (intptr_t)(-1);
    while (! k) {
      while (1) {
        int tmp_12;
        int tmp_15;
        intptr_t tmp_13;
        tmp_12 = fgetc((FILE *)F);
        z = (intptr_t)tmp_12;
        tmp_13 = k;
        k ++;
        ;
        if (tmp_13) {
          int tmp_14;
          if (z - (intptr_t)'\n') 
            if (z - (intptr_t)(-1)) tmp_14 = 1; else tmp_14 = 0;
          else tmp_14 = 0;
          tmp_15 = tmp_14;
        }
        else tmp_15 = z == (intptr_t)'#';
        if (! tmp_15) break;
      }
      if (z - (intptr_t)' ') {
        if (z - (intptr_t)'\n') {
          if (z - (intptr_t)'\r') {
            if (z - (intptr_t)'\t') {
              if (z - (intptr_t)(-1)) {
                intptr_t tmp_10;
                if (z < (intptr_t)'0') {
                  w = (intptr_t)(-1);
                  tmp_10 = w;
                }
                else 
                  if (z > (intptr_t)'9') {
                    w = (intptr_t)(-1);
                    tmp_10 = w;
                  }
                  else {
                    intptr_t tmp_9;
                    if (w < (intptr_t)0) tmp_9 = (intptr_t)0;
                    else tmp_9 = w * (intptr_t)10;
                    w = (tmp_9 + z) - (intptr_t)'0';
                    if (w >> 15) {
                      w = (intptr_t)(-1);
                      tmp_10 = w;
                    }
                    else tmp_10 = (intptr_t)0;
                  }
                k = tmp_10;
              }
              else goto _LAND_6;
            }
            else goto _LAND_6;
          }
          else goto _LAND_6;
        }
        else goto _LAND_6;
      }
      else {
        int tmp_11;
        _LAND_6:
        if (w >= (intptr_t)0) tmp_11 = 1;
        else 
          if (z >> 8) tmp_11 = 1; else tmp_11 = 0;
        k = (intptr_t)tmp_11;
      }
    }
    if (w < (intptr_t)1) break;
    k = (intptr_t)0;
    h = (intptr_t)(-1);
    while (! k) {
      while (1) {
        int tmp_20;
        int tmp_23;
        intptr_t tmp_21;
        tmp_20 = fgetc((FILE *)F);
        z = (intptr_t)tmp_20;
        tmp_21 = k;
        k ++;
        ;
        if (tmp_21) {
          int tmp_22;
          if (z - (intptr_t)'\n') 
            if (z - (intptr_t)(-1)) tmp_22 = 1; else tmp_22 = 0;
          else tmp_22 = 0;
          tmp_23 = tmp_22;
        }
        else tmp_23 = z == (intptr_t)'#';
        if (! tmp_23) break;
      }
      if (z - (intptr_t)' ') {
        if (z - (intptr_t)'\n') {
          if (z - (intptr_t)'\r') {
            if (z - (intptr_t)'\t') {
              if (z - (intptr_t)(-1)) {
                intptr_t tmp_18;
                if (z < (intptr_t)'0') {
                  h = (intptr_t)(-1);
                  tmp_18 = h;
                }
                else 
                  if (z > (intptr_t)'9') {
                    h = (intptr_t)(-1);
                    tmp_18 = h;
                  }
                  else {
                    intptr_t tmp_17;
                    if (h < (intptr_t)0) tmp_17 = (intptr_t)0;
                    else tmp_17 = h * (intptr_t)10;
                    h = (tmp_17 + z) - (intptr_t)'0';
                    if (h >> 15) {
                      h = (intptr_t)(-1);
                      tmp_18 = h;
                    }
                    else tmp_18 = (intptr_t)0;
                  }
                k = tmp_18;
              }
              else goto _LAND_10;
            }
            else goto _LAND_10;
          }
          else goto _LAND_10;
        }
        else goto _LAND_10;
      }
      else {
        int tmp_19;
        _LAND_10:
        if (h >= (intptr_t)0) tmp_19 = 1;
        else 
          if (z >> 8) tmp_19 = 1; else tmp_19 = 0;
        k = (intptr_t)tmp_19;
      }
    }
    if (h < (intptr_t)1) break;
    k = (intptr_t)0;
    y = (intptr_t)(-1);
    while (! k) {
      while (1) {
        int tmp_28;
        int tmp_31;
        intptr_t tmp_29;
        tmp_28 = fgetc((FILE *)F);
        z = (intptr_t)tmp_28;
        tmp_29 = k;
        k ++;
        ;
        if (tmp_29) {
          int tmp_30;
          if (z - (intptr_t)'\n') 
            if (z - (intptr_t)(-1)) tmp_30 = 1; else tmp_30 = 0;
          else tmp_30 = 0;
          tmp_31 = tmp_30;
        }
        else tmp_31 = z == (intptr_t)'#';
        if (! tmp_31) break;
      }
      if (z - (intptr_t)' ') {
        if (z - (intptr_t)'\n') {
          if (z - (intptr_t)'\r') {
            if (z - (intptr_t)'\t') {
              if (z - (intptr_t)(-1)) {
                intptr_t tmp_26;
                if (z < (intptr_t)'0') {
                  y = (intptr_t)(-1);
                  tmp_26 = y;
                }
                else 
                  if (z > (intptr_t)'9') {
                    y = (intptr_t)(-1);
                    tmp_26 = y;
                  }
                  else {
                    intptr_t tmp_25;
                    if (y < (intptr_t)0) tmp_25 = (intptr_t)0;
                    else tmp_25 = y * (intptr_t)10;
                    y = (tmp_25 + z) - (intptr_t)'0';
                    if (y >> 15) {
                      y = (intptr_t)(-1);
                      tmp_26 = y;
                    }
                    else tmp_26 = (intptr_t)0;
                  }
                k = tmp_26;
              }
              else goto _LAND_14;
            }
            else goto _LAND_14;
          }
          else goto _LAND_14;
        }
        else goto _LAND_14;
      }
      else {
        int tmp_27;
        _LAND_14:
        if (y >= (intptr_t)0) tmp_27 = 1;
        else 
          if (z >> 8) tmp_27 = 1; else tmp_27 = 0;
        k = (intptr_t)tmp_27;
      }
    }
    if (y - (intptr_t)255) break;
    if (n < (intptr_t)1) n = (intptr_t)1;
    else {
      intptr_t tmp_33;
      if (n > w * h) tmp_33 = w * h; else tmp_33 = n;
      n = tmp_33;
    }
    L = n;
    s = w * b;
    S = s + b;
    K = S;
    u = K * h + K;
    K = (int64_t)(sizeof(*X) * (unsigned long)L + (unsigned long)(u * (int64_t)9));
    L = (int64_t)((size_t)K);
    ;
    if (K - L) break;
    else {
      t = (int64_t *)malloc((size_t)K);
      if (! t) break;
    }
    O = (void *)(t + u);
    P = (struct __anonstruct_P_1 *)O;
    X = P;
    O = (void *)(P + n);
    d = (uint8_t *)O;
    if (i < (intptr_t)4) 
      while (x < s * h) {
        intptr_t tmp_41;
        k = (intptr_t)0;
        i = (intptr_t)(-1);
        while (! k) {
          while (1) {
            int tmp_37;
            int tmp_40;
            intptr_t tmp_38;
            tmp_37 = fgetc((FILE *)F);
            z = (intptr_t)tmp_37;
            tmp_38 = k;
            k ++;
            ;
            if (tmp_38) {
              int tmp_39;
              if (z - (intptr_t)'\n') 
                if (z - (intptr_t)(-1)) tmp_39 = 1; else tmp_39 = 0;
              else tmp_39 = 0;
              tmp_40 = tmp_39;
            }
            else tmp_40 = z == (intptr_t)'#';
            if (! tmp_40) break;
          }
          if (z - (intptr_t)' ') {
            if (z - (intptr_t)'\n') {
              if (z - (intptr_t)'\r') {
                if (z - (intptr_t)'\t') {
                  if (z - (intptr_t)(-1)) {
                    intptr_t tmp_35;
                    if (z < (intptr_t)'0') {
                      i = (intptr_t)(-1);
                      tmp_35 = i;
                    }
                    else 
                      if (z > (intptr_t)'9') {
                        i = (intptr_t)(-1);
                        tmp_35 = i;
                      }
                      else {
                        intptr_t tmp_34;
                        if (i < (intptr_t)0) tmp_34 = (intptr_t)0;
                        else tmp_34 = i * (intptr_t)10;
                        i = (tmp_34 + z) - (intptr_t)'0';
                        if (i >> 15) {
                          i = (intptr_t)(-1);
                          tmp_35 = i;
                        }
                        else tmp_35 = (intptr_t)0;
                      }
                    k = tmp_35;
                  }
                  else goto _LAND_18;
                }
                else goto _LAND_18;
              }
              else goto _LAND_18;
            }
            else goto _LAND_18;
          }
          else {
            int tmp_36;
            _LAND_18:
            if (i >= (intptr_t)0) tmp_36 = 1;
            else 
              if (z >> 8) tmp_36 = 1; else tmp_36 = 0;
            k = (intptr_t)tmp_36;
          }
        }
        tmp_41 = x;
        x ++;
        *(d + tmp_41) = (uint8_t)i;
        i >>= 8;
        if (i) break;
      }
    else {
      size_t tmp_43;
      tmp_43 = fread((void *)d,(size_t)s,(size_t)h,(FILE *)F);
      i = (intptr_t)((size_t)h - tmp_43);
    }
    fclose((FILE *)F);
    if (i) break;
    j = (intptr_t)0;
    tmp_44 = (uint16_t)j;
    X->y = tmp_44;
    X->x = tmp_44;
    while (j < b) {
      x = j - S;
      z = j - b;
      while (x < S * h) {
        if (x < (intptr_t)0) {
          y = (intptr_t)0;
          *(t + (x + S)) = y;
        }
        else {
          intptr_t tmp_45;
          tmp_45 = y;
          y --;
          ;
          if (tmp_45) {
            z += b;
            u += (int64_t)*(d + z);
          }
          else {
            y = w;
            u = (int64_t)0;
          }
          *(t + (x + S)) = *(t + x) + u;
        }
        x += b;
      }
      j ++;
    }
    X->w = (uint16_t)w;
    X->h = (uint16_t)h;
    {
      int x_0;
      int Z = (int)X->x;
      int y_0 = (int)X->y;
      int w_0 = (int)X->w;
      int h_0 = (int)X->h;
      p = (t + (intptr_t)Z * b) + (intptr_t)y_0 * S;
      l = (intptr_t)(w_0 * h_0);
      j = (intptr_t)0;
      u = j;
      while (1) {
        intptr_t tmp_46;
        if (l) {
          if (! (j < b)) break;
        }
        else break;
        tmp_46 = j;
        j ++;
        X->c[tmp_46] = (uint8_t)(((((*(p + ((intptr_t)w_0 * b + (intptr_t)h_0 * S)) - *(
                                     p + (intptr_t)w_0 * b)) - *(p + 
                                                                 (intptr_t)h_0 * S)) + *p) + 
                                  l / (intptr_t)2) / l);
        p ++;
      }
      while (1) {
        int tmp_47;
        tmp_47 = h_0;
        h_0 --;
        ;
        if (! tmp_47) break;
        x_0 = Z;
        while (x_0 < w_0 + Z) {
          j = (intptr_t)0;
          while (j < b) {
            z = (intptr_t)((int)*(d + (((intptr_t)y_0 * s + (intptr_t)x_0 * b) + j)) - (int)X->c[j]);
            u += z * z;
            j ++;
          }
          x_0 ++;
        }
        y_0 ++;
      }
      X->d = u;
    }
    while (1) {
      int tmp_59;
      X = P;
      N = X;
      if (U) {
        i ++;
        ;
        if (i < n) tmp_59 = 1; else tmp_59 = 0;
      }
      else tmp_59 = 0;
      if (! tmp_59) break;
      j = (intptr_t)0;
      U = j;
      while (1) {
        intptr_t tmp_48;
        tmp_48 = j;
        j ++;
        ;
        if (! (tmp_48 < i)) break;
        if (X->d > U) {
          N = X;
          U = N->d;
        }
        else U = U;
        X ++;
      }
      o = *N;
      v = (intptr_t)o.w;
      q = (intptr_t)o.h;
      x = (intptr_t)o.x;
      y = (intptr_t)o.y;
      k = (intptr_t)0;
      z = k;
      e = z;
      while (1) {
        z ++;
        ;
        if (! (z < v)) break;
        j = (intptr_t)0;
        u = j;
        while (1) {
          int64_t tmp_49;
          int64_t tmp_50;
          p = ((t + x * b) + y * S) + j;
          if (! (j < b)) break;
          K = *(p + (z * b + q * S)) - *(p + z * b);
          Q = (intptr_t)N->c[j] * q;
          L = ((*(p + (v * b + q * S)) - *(p + v * b)) - K) - Q * (v - z);
          K -= (*(p + q * S) - *p) + Q * z;
          if (L < (int64_t)0) tmp_49 = - L; else tmp_49 = L;
          u += tmp_49;
          if (K < (int64_t)0) tmp_50 = - K; else tmp_50 = K;
          u += tmp_50;
          j ++;
        }
        if (u > e) {
          e = u;
          k = z;
          intptr_t tmp_16 = k;
        }
      }
      l = (intptr_t)0;
      z = l;
      f = z;
      while (1) {
        z ++;
        ;
        if (! (z < q)) break;
        j = (intptr_t)0;
        u = j;
        while (1) {
          int64_t tmp_51;
          int64_t tmp_52;
          p = ((t + x * b) + y * S) + j;
          if (! (j < b)) break;
          K = *(p + (z * S + v * b)) - *(p + z * S);
          Q = (intptr_t)N->c[j] * v;
          L = ((*(p + (q * S + v * b)) - *(p + q * S)) - K) - Q * (q - z);
          K -= (*(p + v * b) - *p) + Q * z;
          if (L < (int64_t)0) tmp_51 = - L; else tmp_51 = L;
          u += tmp_51;
          if (K < (int64_t)0) tmp_52 = - K; else tmp_52 = K;
          u += tmp_52;
          j ++;
        }
        if (u > f) {
          f = u;
          l = z;
          intptr_t tmp_24 = l;
        }
      }
      if (e < f) {
        uint16_t tmp_53;
        tmp_53 = (uint16_t)l;
        N->h = tmp_53;
        o.y = (uint16_t)((int)o.y + (int)tmp_53);
        o.h = (uint16_t)((intptr_t)o.h - l);
        uint16_t tmp_32 = o.h;
      }
      else {
        uint16_t tmp_54;
        tmp_54 = (uint16_t)k;
        N->w = tmp_54;
        o.x = (uint16_t)((int)o.x + (int)tmp_54);
        o.w = (uint16_t)((intptr_t)o.w - k);
        uint16_t tmp_42 = o.w;
      }
      *X = o;
      {
        int x_1;
        int Z_0 = (int)X->x;
        int y_1 = (int)X->y;
        int w_1 = (int)X->w;
        int h_1 = (int)X->h;
        p = (t + (intptr_t)Z_0 * b) + (intptr_t)y_1 * S;
        l = (intptr_t)(w_1 * h_1);
        j = (intptr_t)0;
        u = j;
        while (1) {
          intptr_t tmp_55;
          if (l) {
            if (! (j < b)) break;
          }
          else break;
          tmp_55 = j;
          j ++;
          X->c[tmp_55] = (uint8_t)(((((*(p + ((intptr_t)w_1 * b + (intptr_t)h_1 * S)) - *(
                                       p + (intptr_t)w_1 * b)) - *(p + 
                                                                   (intptr_t)h_1 * S)) + *p) + 
                                    l / (intptr_t)2) / l);
          p ++;
        }
        while (1) {
          int tmp_56;
          tmp_56 = h_1;
          h_1 --;
          ;
          if (! tmp_56) break;
          x_1 = Z_0;
          while (x_1 < w_1 + Z_0) {
            j = (intptr_t)0;
            while (j < b) {
              z = (intptr_t)((int)*(d + (((intptr_t)y_1 * s + (intptr_t)x_1 * b) + j)) - (int)X->c[j]);
              u += z * z;
              j ++;
            }
            x_1 ++;
          }
          y_1 ++;
        }
        X->d = u;
      }
      X = N;
      {
        int x_2;
        int Z_1 = (int)X->x;
        int y_2 = (int)X->y;
        int w_2 = (int)X->w;
        int h_2 = (int)X->h;
        p = (t + (intptr_t)Z_1 * b) + (intptr_t)y_2 * S;
        l = (intptr_t)(w_2 * h_2);
        j = (intptr_t)0;
        u = j;
        while (1) {
          intptr_t tmp_57;
          if (l) {
            if (! (j < b)) break;
          }
          else break;
          tmp_57 = j;
          j ++;
          X->c[tmp_57] = (uint8_t)(((((*(p + ((intptr_t)w_2 * b + (intptr_t)h_2 * S)) - *(
                                       p + (intptr_t)w_2 * b)) - *(p + 
                                                                   (intptr_t)h_2 * S)) + *p) + 
                                    l / (intptr_t)2) / l);
          p ++;
        }
        while (1) {
          int tmp_58;
          tmp_58 = h_2;
          h_2 --;
          ;
          if (! tmp_58) break;
          x_2 = Z_1;
          while (x_2 < w_2 + Z_1) {
            j = (intptr_t)0;
            while (j < b) {
              z = (intptr_t)((int)*(d + (((intptr_t)y_2 * s + (intptr_t)x_2 * b) + j)) - (int)X->c[j]);
              u += z * z;
              j ++;
            }
            x_2 ++;
          }
          y_2 ++;
        }
        X->d = u;
      }
    }
    while (1) {
      intptr_t tmp_62;
      tmp_62 = i;
      i --;
      ;
      if (! tmp_62) break;
      {
        int x_3;
        int Z_2 = (int)X->x;
        int y_3 = (int)X->y;
        int w_3 = (int)X->w;
        int h_3 = (int)X->h;
        while (1) {
          int tmp_61;
          tmp_61 = h_3;
          h_3 --;
          ;
          if (! tmp_61) break;
          x_3 = Z_2;
          while (x_3 < w_3 + Z_2) {
            j = (intptr_t)0;
            while (j < b) {
              uint8_t tmp_60;
              tmp_60 = X->c[j];
              *(d + (((intptr_t)y_3 * s + (intptr_t)x_3 * b) + j)) = tmp_60;
              z = (intptr_t)tmp_60;
              j ++;
            }
            x_3 ++;
          }
          y_3 ++;
        }
      }
      X ++;
    }
    V ++;
    ;
    F = (void *)fopen((char const *)*V,"wb");
    if (! F) break;
    ;
    c = (int)w;
    ;
    fprintf((FILE *)F,"P6\n%i %i\n255\n",c,(int)h); /* fprintf_va_1 */
    fwrite((void const *)d,(size_t)s,(size_t)h,(FILE *)F);
    fclose((FILE *)F);
    free((void *)t);
    __retres = 0;
    goto return_label;
  }
  __retres = 1;
  return_label: return __retres;
}


