/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
#include "stdlib.h"
typedef int _;
struct __anonstruct_b_1 {
   _ x ;
   _ y ;
   _ z ;
};
typedef struct __anonstruct_b_1 b;
void m(int p_0, int q_0);

b *U;
b u;
_ h;
FILE *f;
_ H;
_ g = 6 * 40;
_ V;
_ i;
_ o;
_ l;
_ e;
_ t = 1;
_ E[4];
_ I[22] =
  {((8 * 4) * 17) * 8,
   5 * 19,
   (2 * 759) * 3,
   1,
   2 + ((5 * 4) * 5) * 29,
   446,
   2,
   ~ (- (((2 * 20) * 2) * (((31 * 2) * 3) * 2 + 1))),
   7 * ((((2 * 2) * 3) * 2) * ~ (- ((2 * 3) * 2)) - 1),
   (((7 * ~ (- (4 * 5))) * 4) * 7) * 3 - 1,
   ((3 * - (~ ((2 * 3) * 2))) * ~ (- (2 * - (~ (((2 * 3) * 2) * 3))))) * 3,
   ~ (- ((((((((2 * 2) * 2) * 2) * 2) * 2) * 2) * 2) * 2)),
   1 + ((7 * 4) * 7) * 4,
   9,
   4 * 6 - 1,
   63,
   5 * ~ (- (5 * 6)),
   (3 * 4) * 8,
   (8 * 2) * 8,
   6,
   ((17 * 113) * 8) * 4 - 6,
   (((((11 * 3) * 8) * 4) * 8) * 8) * 2 - 1};
_ p;
_ q;
_ x;
_ y;
void s(void)
{
  u = *(U + x);
  *(U + x) = *(U + y);
  *(U + y) = u;
  return;
}

/*@ assigns \nothing; */
void m(int p_0, int q_0)
{
  _ d_0 = (p_0 + q_0) / 2;
  if (d_0 - p_0) {
    m(p_0,d_0);
    m(d_0,q_0);
    i = p_0;
    o = d_0;
    y = H + p_0;
    while (y < H + q_0) {
      if (i >= d_0) goto _LOR_0;
      else 
        if (o < q_0) {
          if ((U + i)->y > (U + o)->y) goto _LOR_0;
          else 
            if ((U + i)->y == (U + o)->y) {
              if ((U + i)->x > (U + o)->x) {
                _ tmp;
                _LOR_0: tmp = o;
                o ++;
                x = tmp;
              }
              else goto _LAND;
            }
            else goto _LAND;
        }
        else {
          _ tmp_0;
          _LAND: tmp_0 = i;
          i ++;
          x = tmp_0;
        }
      s();
      y ++;
    }
    y = p_0;
    x = H + p_0;
    while (y < q_0) {
      s();
      x ++;
      y ++;
    }
  }
  return;
}

void v(void)
{
  l = 0;
  i = l;
  while (1) {
    if (i < 22) {
      _ tmp;
      int tmp_0;
      tmp = i;
      i ++;
      o = I[tmp] + l;
      l = o + I[i];
      if (e < o) tmp_0 = 1;
      else 
        if (e > l) tmp_0 = 1; else tmp_0 = 0;
      if (! tmp_0) break;
    }
    else break;
    i ++;
  }
  x = (2 + x) - i / 22;
  return;
}

void a(void)
{
  _ tmp_0;
  if (H + 2 > t) {
    void *tmp;
    t *= 2;
    tmp = realloc((void *)U,(unsigned long)(2 * t) * sizeof(b));
    U = (b *)tmp;
  }
  (U + H)->x = x;
  (U + H)->y = y;
  tmp_0 = H;
  H ++;
  (U + tmp_0)->z = e;
  if (p > y) p = y; else p = p;
  if (q < y) q = y; else q = q;
  v();
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, stream->__fc_FILE_data;
    assigns \result
      \from (indirect: stream->__fc_FILE_id),
            (indirect: stream->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns stream->__fc_FILE_data
      \from (indirect: stream->__fc_FILE_id), stream->__fc_FILE_data,
            (indirect: *(format + (0 ..))), param1, param0;
 */
int fprintf_va_1(FILE * restrict stream, char const * restrict format,
                 int param0, int param1);

void Q(_ O)
{
  l = abs(O);
  if (l) fprintf(f,"\033[%d%c",l,V + (O > 0)); /* fprintf_va_1 */
  V ^= 2;
  return;
}

void P(_ p_0)
{
  o = 0;
  e = p_0;
  E[o] = e;
  if (p_0 >> 7) {
    while (p_0 > 63 >> o) {
      {
        _ tmp;
        tmp = o;
        o ++;
        E[tmp] = 128 | (9 * 7 & p_0);
      }
      p_0 >>= 6;
    }
    E[o] = ((g * 8 >> o) & g) | p_0;
  }
  while (o > -1) {
    _ tmp_0;
    ;
    tmp_0 = o;
    o --;
    ;
    fputc(E[tmp_0],f);
  }
  return;
}

char d[2] = {(char)'r', (char)'\000'};
int r(char *u_0)
{
  int tmp;
  f = fopen((char const *)u_0,(char const *)(d));
  if (f) tmp = 0;
  else {
    perror((char const *)u_0);
    tmp = -1;
  }
  return tmp;
}

_ main(_ O, char **Z)
{
  f = __fc_stdin;
  O --;
  if (O) {
    Z ++;
    ;
    if ((int)*(*Z) - 45) goto _LOR;
    else 
      if (*(*Z + 01)) {
        int tmp;
        _LOR: tmp = r(*Z);
        if (tmp) goto X;
      }
  }
  d[0] = (char)((int)d[0] | 5);
  while (1) {
    e = fgetc(f);
    if (! (e - -1)) break;
    V += (V + e) << 10;
    V ^= V >> 6;
    if (h < 0) {
      int tmp_3;
      if (e - 91) {
        int tmp_2;
        if (e < 48) goto _LOR_0;
        else 
          if (e > 59) {
            int tmp_1;
            _LOR_0:
            {
              l *= ~ (- (e & 2));
              if (e > 64) {
                if (e < 67) {
                  y += l;
                  tmp_1 = 0;
                }
                else goto _LAND;
              }
              else {
                _ tmp_0;
                _LAND:
                if (e < 69) {
                  x = l + x;
                  if (x < 0) {
                    x = 0;
                    tmp_0 = x;
                  }
                  else tmp_0 = 0;
                }
                else tmp_0 = 0;
                tmp_1 = tmp_0;
              }
            }
            tmp_2 = tmp_1;
          }
          else {
            l = (l * 10 + e) - 48;
            tmp_2 = ~ l;
          }
        tmp_3 = tmp_2;
      }
      else tmp_3 = h;
      h = tmp_3;
    }
    else {
      _ tmp_10;
      if (h) {
        _ tmp_5;
        int tmp_4;
        l = (l << 6) | (e & 63);
        e = l;
        h --;
        if (h) tmp_4 = 0; else tmp_4 = 1;
        if (tmp_4) {
          a();
          tmp_5 = h;
        }
        else tmp_5 = h;
        tmp_10 = tmp_5;
      }
      else {
        int tmp_9;
        if (192 == (32 * 7 & e)) {
          l = e & 31;
          tmp_9 = 1;
        }
        else {
          int tmp_8;
          if ((e & g) == 224) {
            l = e & 15;
            tmp_8 = 2;
          }
          else {
            int tmp_7;
            if ((e & 248) == g) {
              l = e & 7;
              tmp_7 = 3;
            }
            else {
              _ tmp_6;
              if (e - 27) {
                if (e == 10) {
                  y ++;
                  x = 0;
                }
                else 
                  if (e - 32) {
                    if (e == 9) x = (x + 8) & ~ 7;
                    else 
                      if (32 < e) a();
                  }
                  else x ++;
                tmp_6 = h;
              }
              else {
                l = 0;
                tmp_6 = ~ l;
              }
              tmp_7 = tmp_6;
            }
            tmp_8 = tmp_7;
          }
          tmp_9 = tmp_8;
        }
        tmp_10 = tmp_9;
      }
      h = tmp_10;
    }
  }
  fclose(f);
  f = __fc_stdout;
  if (U) 
    if (O < 1) {
      _ tmp_11;
      tmp_11 = H;
      (U + H)->x = tmp_11;
      m(0,tmp_11);
      x = 0;
      h = x;
      y = p;
      while (h < H) {
        while (y < (U + h)->y) {
          P(10);
          y ++;
          x = 0;
        }
        while (x < (U + h)->x) {
          P(32);
          x ++;
        }
        while (1) {
          int tmp_12;
          if (h < H) {
            h ++;
            ;
            if ((U + h)->y == y) tmp_12 = (U + h)->x == x; else tmp_12 = 0;
          }
          else tmp_12 = 0;
          if (! tmp_12) break;
        }
        P((U + (h - 1))->z);
        v();
      }
      if (0 < x) P(- (~ 9));
    }
    else {
      int tmp_15;
      srand((unsigned int)V);
      x = H;
      while (1) {
        x --;
        if (! (x > 0)) break;
        V = rand();
        y = V % - (~ x);
        s();
      }
      O --;
      if (O) {
        int tmp_13;
        Z ++;
        ;
        tmp_13 = r(*Z);
        tmp_15 = tmp_13;
      }
      else {
        _ tmp_14;
        tmp_14 = O;
        O ++;
        tmp_15 = tmp_14;
      }
      if (tmp_15) goto X;
      h = 0;
      t = h;
      y = q + 1;
      while (1) {
        if (h < H) {
          if (! (t < O)) break;
        }
        else break;
        if (t) {
          int tmp_16;
          Z ++;
          ;
          tmp_16 = r(*Z);
          if (tmp_16) goto X;
        }
        if (! t) {
          h = (q - p) + 2;
          while (1) {
            h --;
            if (! h) break;
            P(10);
          }
        }
        V = 65;
        while (h < (H * - (~ t)) / O) {
          _ tmp_17;
          Q((U + h)->y - y);
          Q(x - (U + h)->x);
          P((U + h)->z);
          x = (U + h)->x;
          v();
          tmp_17 = h;
          h ++;
          y = (U + tmp_17)->y;
        }
        Q(q - y);
        P(10);
        x = 0;
        y = q + 1;
        t ++;
        fclose(f);
      }
    }
  O = 0;
  X: ;
  return O;
}


