/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
typedef unsigned char y;
typedef unsigned long long z;
static unsigned long long l(unsigned long long b_0);

y *w;

static z b(z a, z b_0)
{
  z __retres;
  __retres = (a >> b_0) | (a << ((z)64 - b_0));
  return __retres;
}

static z _(z a)
{
  z __retres;
  z tmp;
  z tmp_0;
  tmp = b(a,(z)61);
  tmp_0 = b(a,(z)19);
  ;
  __retres = ((a >> 6) ^ tmp) ^ tmp_0;
  return __retres;
}

static z _a(z a)
{
  z __retres;
  z tmp;
  z tmp_0;
  z tmp_1;
  tmp = b(a,(z)39);
  tmp_0 = b(a,(z)28);
  tmp_1 = b(a,(z)34);
  __retres = (tmp ^ tmp_0) ^ tmp_1;
  return __retres;
}

static z x(z a, z b_0, z c)
{
  z __retres;
  __retres = ((a ^ b_0) & c) ^ (a & b_0);
  return __retres;
}

static z u(z a)
{
  z __retres;
  z tmp;
  z tmp_0;
  z tmp_1;
  tmp = b(a,(z)41);
  tmp_0 = b(a,(z)18);
  tmp_1 = b(a,(z)14);
  __retres = (tmp ^ tmp_0) ^ tmp_1;
  return __retres;
}

static z t(z a, z b_0, z c)
{
  z __retres;
  __retres = (((((((z)3 * (a * c + b_0 * b_0) >> 9) + (((z)3 * b_0) * c >> 32)) * a >> 21) + (
                (((z)3 * a) * a) * b_0 >> 6)) + (((b_0 >> 4) * (b_0 >> 4)) * b_0 >> 46)) >> 18) + 
             (a * a) * a;
  return __retres;
}

static z m(z a, z b_0, z c)
{
  z __retres;
  z tmp;
  tmp = t((b_0 << 16) | (c >> 48),(c >> 24) % (unsigned long long)(1 << 24),
          c % (unsigned long long)(1 << 24));
  ;
  __retres = (z)(tmp >> 48 < a);
  return __retres;
}

static z s(z a, z b_0, z c)
{
  z __retres;
  __retres = (a & b_0) ^ (~ a & c);
  return __retres;
}

static z r(z a)
{
  z __retres;
  z tmp;
  z tmp_0;
  tmp = b(a,(z)1);
  tmp_0 = b(a,(z)8);
  ;
  __retres = (tmp ^ tmp_0) ^ (a >> 7);
  return __retres;
}

static z o(z b_0)
{
  z a = (z)0;
  z c = (z)0;
  while (c < (z)8) {
    a = a * (z)256 + (z)*(w + (b_0 * (z)8 + c));
    c ++;
  }
  return a;
}

static z d(z b_0)
{
  z a = (z)0;
  z c = (z)0;
  while (c < (z)13) {
    a = (a * (z)31 + (z)*(w + (b_0 * (z)13 + c))) - (z)96;
    c ++;
  }
  return a;
}

static z p(z b_0)
{
  z a = (z)0;
  z c = (z)4;
  while (c) {
    z tmp;
    tmp = m(b_0,a | c,a);
    a |= c * tmp;
    c /= (z)2;
  }
  return a;
}

static z q(z b_0)
{
  z a = (z)0;
  z c = 1ull << 63;
  while (c) {
    z tmp_0;
    z tmp;
    ;
    tmp = p(b_0);
    ;
    tmp_0 = m(b_0,tmp,a | c);
    a |= c * tmp_0;
    c /= (z)2;
  }
  return a;
}

static z v(z b_0)
{
  z a = (z)(b_0 > (z)1);
  z c = (z)2;
  while (c < b_0) {
    int tmp;
    if (a) 
      if (b_0 % c) tmp = 1; else tmp = 0;
    else tmp = 0;
    a = (z)tmp;
    c ++;
  }
  return a;
}

/*@ assigns \result;
    assigns \result \from b_0; */
static unsigned long long l(unsigned long long b_0)
{
  unsigned long long tmp_0;
  if (b_0) {
    unsigned long long tmp;
    tmp = l(b_0 - (unsigned long long)1);
    tmp_0 = tmp + (unsigned long long)1;
  }
  else tmp_0 = (unsigned long long)2;
  z a = tmp_0;
  z c = a;
  while (1) {
    z tmp_1;
    tmp_1 = v(c);
    if (tmp_1) break;
    a = c + (z)1;
    c ++;
  }
  return a;
}

static void n(z *a, z *b_0, z *c)
{
  z tmp;
  z tmp_0;
  z tmp_2;
  unsigned long long tmp_1;
  tmp = u(*(a + 4));
  tmp_0 = s(*(a + 4),*(a + 5),*(a + 6));
  tmp_1 = l(*b_0);
  tmp_2 = q(tmp_1);
  z d_0 =
    (((*(a + 7) + tmp) + tmp_0) + tmp_2) + *(c + *b_0 % (unsigned long long)16);
  {
    z e = (z)0;
    while (e < (z)8) {
      if (e - (z)3) {
        z tmp_5;
        if (e - (z)7) tmp_5 = *(a + ((z)6 - e));
        else {
          z tmp_3;
          z tmp_4;
          tmp_3 = _a(*(a + 0));
          tmp_4 = x(*(a + 1),*(a + 2),*(a + 3));
          tmp_5 = (d_0 + tmp_3) + tmp_4;
        }
        *(a + ((z)7 - e)) = tmp_5;
      }
      else *(a + ((z)7 - e)) = d_0 + *(a + 3);
      e ++;
    }
  }
  {
    z e_0 = (z)0;
    while (e_0 < (z)(16 * (*b_0 % (unsigned long long)16 > (unsigned long long)14))) {
      z tmp_6;
      z tmp_7;
      tmp_6 = r(*(c + (e_0 + (z)1) % (unsigned long long)16));
      tmp_7 = _(*(c + (e_0 + (z)14) % (unsigned long long)16));
      *(c + e_0) += (*(c + (e_0 + (z)9) % (unsigned long long)16) + tmp_6) + tmp_7;
      e_0 ++;
    }
  }
  return;
}

static void k(z *a, z *b_0, z *c)
{
  {
    z e = (z)0;
    while (e < (z)8) {
      *(b_0 + e) = *(a + e);
      e ++;
    }
  }
  {
    z e_0 = (z)0;
    while (e_0 < (z)80) {
      n(a,& e_0,c);
      e_0 ++;
    }
  }
  {
    z e_1 = (z)0;
    while (e_1 < (z)8) {
      *(a + e_1) += *(b_0 + e_1);
      e_1 ++;
    }
  }
  return;
}

/*@ requires valid_read_string(param1);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param1 + (0 ..))),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param1 + (0 ..)), param0;
 */
int printf_va_1(char const * restrict format, unsigned long long param0,
                char *param1);

int main(void)
{
  int __retres;
  z a[8];
  z b_0[8];
  z c[16];
  {
    z e = (z)0;
    while (e < (z)8) {
      a[e] = d(e);
      e ++;
    }
  }
  {
    z e_0 = (z)0;
    while (e_0 < (z)16) {
      if (e_0 - (z)15) c[e_0] = o(e_0); else c[e_0] = d((z)8);
      e_0 ++;
    }
  }
  k(a,b_0,c);
  {
    z e_1 = (z)0;
    while (e_1 < (z)16) {
      if (e_1) {
        int tmp_1;
        if (e_1 - (z)15) tmp_1 = 0; else tmp_1 = 11264;
        c[e_1] = (z)tmp_1;
      }
      else c[e_1] = 1ull << 63;
      e_1 ++;
    }
  }
  k(a,b_0,c);
  {
    z e_2 = (z)0;
    while (e_2 < (z)8) {
      char const *tmp_2;
      if (e_2 - (z)7) tmp_2 = ""; else tmp_2 = "\n";
      ;
      printf("%016llx%s",a[e_2],(char *)tmp_2); /* printf_va_1 */
      e_2 ++;
    }
  }
  __retres = ! w;
  return __retres;
}

y *w =
  (y *)"crsmyiajqhwy{unwa|hjoi`hlxhpxrzb~edko~rtr~ileqyjk`znqgsuitvgqnfdfa||wedvnmhozkpokootqzcexeld~oibqzpcsuw{ib{x`m`hsa`jmn}wcfzpb";

