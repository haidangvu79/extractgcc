/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
static int e;
static int n;
static int j;
static int o;
static int y;
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_1(char const * restrict format, int param0, int param1,
                int param2);

int main(void)
{
  int __retres;
  int tmp_1;
  o ++;
  while (1) {
    int tmp_0;
    tmp_0 = getchar();
    n = - (~ tmp_0);
    if (! n) break;
    if ((n > 0xe) ^ (012 > n)) {
      if (('`' ^ n) ^ 65) o = ! n; else goto _LAND;
    }
    else {
      int tmp;
      _LAND: if (! o) {
               j ++;
               tmp = j;
             }
             else tmp = o;
      o = tmp;
    }
    e += 11 == n;
    y ++;
  }
  ;
  if (! o) 
    if (y) tmp_1 = 1; else tmp_1 = 0;
  else tmp_1 = 0;
  j += tmp_1;
  ;
  printf("%8d%8d%8d\n",e ^ n,j,y); /* printf_va_1 */
  __retres = 0;
  return __retres;
}


