/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
typedef long I;
struct __anonstruct_PT_1 {
   I c[4] ;
   I b ;
   I e ;
   I k ;
};
typedef struct __anonstruct_PT_1 PT;
PT cases[9] =
  {{.c = {(4194304L + 2097152L) + 67108864L,
          262144L,
          (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
             (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L,
          -1L},
    .b = (I)1,
    .e = (I)2,
    .k = (I)1},
   {.c = {((4194304L + 2097152L) + 67108864L) + ((524288L + 262144L) + (
                                                 (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                    (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L)),
          262144L,
          262144L,
          (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
             (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L},
    .b = (I)2,
    .e = (I)3,
    .k = (I)2},
   {.c = {((4194304L + 2097152L) + 67108864L) + ((524288L + 262144L) + (
                                                 (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                    (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L)),
          (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
             (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L,
          262144L,
          (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
             (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L},
    .b = (I)1,
    .e = (I)3,
    .k = (I)2},
   {.c = {((4194304L + 2097152L) + 67108864L) + ((524288L + 262144L) + (
                                                 (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                    (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L)),
          262144L + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                        (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          524288L,
          -1L},
    .b = (I)1,
    .e = (I)2,
    .k = (I)1},
   {.c = {((4194304L + 2097152L) + 67108864L) + ((524288L + 262144L) + (
                                                 (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                    (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L)),
          262144L + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                        (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          1048576L,
          262144L + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                        (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L)},
    .b = (I)1,
    .e = (I)3,
    .k = (I)1},
   {.c = {((4194304L + 2097152L) + 67108864L) + ((524288L + 262144L) + (
                                                 (((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                    (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L)),
          262144L + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                        (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          262144L,
          262144L},
    .b = (I)1,
    .e = (I)3,
    .k = (I)1},
   {.c = {(4194304L + 2097152L) + 67108864L,
          ((1048576L + 524288L) + 262144L) + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                 (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          ((1048576L + 524288L) + 262144L) + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                 (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          -1L},
    .b = (I)1,
    .e = (I)2,
    .k = (I)1},
   {.c = {33554432L + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                          (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          2097152L,
          ((1048576L + 524288L) + 262144L) + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                 (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          -1L},
    .b = (I)0,
    .e = (I)2,
    .k = (I)1},
   {.c = {67108864L,
          ((1048576L + 524288L) + 262144L) + ((((((((((((((((1L + 256L) + 4L) + 8L) + 16L) + 64L) + 128L) + 268435456L) + 536870912L) + 1024L) + 4096L) + 8192L) + 16384L) + (
                                                 (2L + 131072L) + 2048L)) + 32L) + 32768L) + 65536L),
          134217728L,
          -1L},
    .b = (I)0,
    .e = (I)2,
    .k = (I)0}};
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_1(char const * restrict format, int param0, int param1,
                long param2);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_2(char const * restrict format, int param0, long param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_3(char const * restrict format, int param0, long param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_4(char const * restrict format, int param0, long param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_5(char const * restrict format);

int main(void)
{
  int __retres;
  int i;
  int j;
  j = 0;
  while ((unsigned long)j < sizeof(cases) / sizeof(cases[0])) {
    i = 0;
    while ((unsigned long)i < sizeof(cases[0].c) / sizeof(cases[0].c[0])) {
      printf("cases[%d].c[%d]=%ld\n",j,i,cases[j].c[i]); /* printf_va_1 */
      i ++;
    }
    printf("cases[%d].b=%ld\n",j,cases[j].b); /* printf_va_2 */
    printf("cases[%d].e=%ld\n",j,cases[j].e); /* printf_va_3 */
    printf("cases[%d].k=%ld\n",j,cases[j].k); /* printf_va_4 */
    printf("\n"); /* printf_va_5 */
    j ++;
  }
  __retres = 0;
  return __retres;
}


