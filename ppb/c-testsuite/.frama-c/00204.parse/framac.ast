/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdint.h"
#include "stdio.h"
struct s1 {
   char x[1] ;
};
struct s2 {
   char x[2] ;
};
struct s3 {
   char x[3] ;
};
struct s4 {
   char x[4] ;
};
struct s5 {
   char x[5] ;
};
struct s6 {
   char x[6] ;
};
struct s7 {
   char x[7] ;
};
struct s8 {
   char x[8] ;
};
struct s9 {
   char x[9] ;
};
struct s10 {
   char x[10] ;
};
struct s11 {
   char x[11] ;
};
struct s12 {
   char x[12] ;
};
struct s13 {
   char x[13] ;
};
struct s14 {
   char x[14] ;
};
struct s15 {
   char x[15] ;
};
struct s16 {
   char x[16] ;
};
struct s17 {
   char x[17] ;
};
struct hfa11 {
   float a ;
};
struct hfa12 {
   float a ;
   float b ;
};
struct hfa13 {
   float a ;
   float b ;
   float c ;
};
struct hfa14 {
   float a ;
   float b ;
   float c ;
   float d ;
};
struct hfa21 {
   double a ;
};
struct hfa22 {
   double a ;
   double b ;
};
struct hfa23 {
   double a ;
   double b ;
   double c ;
};
struct hfa24 {
   double a ;
   double b ;
   double c ;
   double d ;
};
struct hfa31 {
   long double a ;
};
struct hfa32 {
   long double a ;
   long double b ;
};
struct hfa33 {
   long double a ;
   long double b ;
   long double c ;
};
struct hfa34 {
   long double a ;
   long double b ;
   long double c ;
   long double d ;
};
struct s1 s1 = {.x = {(char)'0'}};
struct s2 s2 = {.x = {(char)'1', (char)'2'}};
struct s3 s3 = {.x = {(char)'3', (char)'4', (char)'5'}};
struct s4 s4 = {.x = {(char)'6', (char)'7', (char)'8', (char)'9'}};
struct s5 s5 =
  {.x = {(char)'a', (char)'b', (char)'c', (char)'d', (char)'e'}};
struct s6 s6 =
  {.x = {(char)'f', (char)'g', (char)'h', (char)'i', (char)'j', (char)'k'}};
struct s7 s7 =
  {.x = {(char)'l',
         (char)'m',
         (char)'n',
         (char)'o',
         (char)'p',
         (char)'q',
         (char)'r'}};
struct s8 s8 =
  {.x = {(char)'s',
         (char)'t',
         (char)'u',
         (char)'v',
         (char)'w',
         (char)'x',
         (char)'y',
         (char)'z'}};
struct s9 s9 =
  {.x = {(char)'A',
         (char)'B',
         (char)'C',
         (char)'D',
         (char)'E',
         (char)'F',
         (char)'G',
         (char)'H',
         (char)'I'}};
struct s10 s10 =
  {.x = {(char)'J',
         (char)'K',
         (char)'L',
         (char)'M',
         (char)'N',
         (char)'O',
         (char)'P',
         (char)'Q',
         (char)'R',
         (char)'S'}};
struct s11 s11 =
  {.x = {(char)'T',
         (char)'U',
         (char)'V',
         (char)'W',
         (char)'X',
         (char)'Y',
         (char)'Z',
         (char)'0',
         (char)'1',
         (char)'2',
         (char)'3'}};
struct s12 s12 =
  {.x = {(char)'4',
         (char)'5',
         (char)'6',
         (char)'7',
         (char)'8',
         (char)'9',
         (char)'a',
         (char)'b',
         (char)'c',
         (char)'d',
         (char)'e',
         (char)'f'}};
struct s13 s13 =
  {.x = {(char)'g',
         (char)'h',
         (char)'i',
         (char)'j',
         (char)'k',
         (char)'l',
         (char)'m',
         (char)'n',
         (char)'o',
         (char)'p',
         (char)'q',
         (char)'r',
         (char)'s'}};
struct s14 s14 =
  {.x = {(char)'t',
         (char)'u',
         (char)'v',
         (char)'w',
         (char)'x',
         (char)'y',
         (char)'z',
         (char)'A',
         (char)'B',
         (char)'C',
         (char)'D',
         (char)'E',
         (char)'F',
         (char)'G'}};
struct s15 s15 =
  {.x = {(char)'H',
         (char)'I',
         (char)'J',
         (char)'K',
         (char)'L',
         (char)'M',
         (char)'N',
         (char)'O',
         (char)'P',
         (char)'Q',
         (char)'R',
         (char)'S',
         (char)'T',
         (char)'U',
         (char)'V'}};
struct s16 s16 =
  {.x = {(char)'W',
         (char)'X',
         (char)'Y',
         (char)'Z',
         (char)'0',
         (char)'1',
         (char)'2',
         (char)'3',
         (char)'4',
         (char)'5',
         (char)'6',
         (char)'7',
         (char)'8',
         (char)'9',
         (char)'a',
         (char)'b'}};
struct s17 s17 =
  {.x = {(char)'c',
         (char)'d',
         (char)'e',
         (char)'f',
         (char)'g',
         (char)'h',
         (char)'i',
         (char)'j',
         (char)'k',
         (char)'l',
         (char)'m',
         (char)'n',
         (char)'o',
         (char)'p',
         (char)'q',
         (char)'r',
         (char)'s'}};
struct hfa11 hfa11 = {.a = (float)11.1};
struct hfa12 hfa12 = {.a = (float)12.1, .b = (float)12.2};
struct hfa13 hfa13 = {.a = (float)13.1, .b = (float)13.2, .c = (float)13.3};
struct hfa14 hfa14 =
  {.a = (float)14.1, .b = (float)14.2, .c = (float)14.3, .d = (float)14.4};
struct hfa21 hfa21 = {.a = 21.1};
struct hfa22 hfa22 = {.a = 22.1, .b = 22.2};
struct hfa23 hfa23 = {.a = 23.1, .b = 23.2, .c = 23.3};
struct hfa24 hfa24 = {.a = 24.1, .b = 24.2, .c = 24.3, .d = 24.4};
struct hfa31 hfa31 = {.a = (long double)31.1};
struct hfa32 hfa32 = {.a = (long double)32.1, .b = (long double)32.2};
struct hfa33 hfa33 =
  {.a = (long double)33.1, .b = (long double)33.2, .c = (long double)33.3};
struct hfa34 hfa34 =
  {.a = (long double)34.1,
   .b = (long double)34.2,
   .c = (long double)34.3,
   .d = (long double)34.4};
/*@ requires valid_read_nstring(param0, 1);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_1(char const * restrict format, char *param0);

void fa_s1(struct s1 a)
{
  printf("%.1s\n",a.x); /* printf_va_1 */
  return;
}

/*@ requires valid_read_nstring(param0, 2);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_2(char const * restrict format, char *param0);

void fa_s2(struct s2 a)
{
  printf("%.2s\n",a.x); /* printf_va_2 */
  return;
}

/*@ requires valid_read_nstring(param0, 3);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_3(char const * restrict format, char *param0);

void fa_s3(struct s3 a)
{
  printf("%.3s\n",a.x); /* printf_va_3 */
  return;
}

/*@ requires valid_read_nstring(param0, 4);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_4(char const * restrict format, char *param0);

void fa_s4(struct s4 a)
{
  printf("%.4s\n",a.x); /* printf_va_4 */
  return;
}

/*@ requires valid_read_nstring(param0, 5);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_5(char const * restrict format, char *param0);

void fa_s5(struct s5 a)
{
  printf("%.5s\n",a.x); /* printf_va_5 */
  return;
}

/*@ requires valid_read_nstring(param0, 6);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_6(char const * restrict format, char *param0);

void fa_s6(struct s6 a)
{
  printf("%.6s\n",a.x); /* printf_va_6 */
  return;
}

/*@ requires valid_read_nstring(param0, 7);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_7(char const * restrict format, char *param0);

void fa_s7(struct s7 a)
{
  printf("%.7s\n",a.x); /* printf_va_7 */
  return;
}

/*@ requires valid_read_nstring(param0, 8);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_8(char const * restrict format, char *param0);

void fa_s8(struct s8 a)
{
  printf("%.8s\n",a.x); /* printf_va_8 */
  return;
}

/*@ requires valid_read_nstring(param0, 9);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_9(char const * restrict format, char *param0);

void fa_s9(struct s9 a)
{
  printf("%.9s\n",a.x); /* printf_va_9 */
  return;
}

/*@ requires valid_read_nstring(param0, 10);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_10(char const * restrict format, char *param0);

void fa_s10(struct s10 a)
{
  printf("%.10s\n",a.x); /* printf_va_10 */
  return;
}

/*@ requires valid_read_nstring(param0, 11);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_11(char const * restrict format, char *param0);

void fa_s11(struct s11 a)
{
  printf("%.11s\n",a.x); /* printf_va_11 */
  return;
}

/*@ requires valid_read_nstring(param0, 12);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_12(char const * restrict format, char *param0);

void fa_s12(struct s12 a)
{
  printf("%.12s\n",a.x); /* printf_va_12 */
  return;
}

/*@ requires valid_read_nstring(param0, 13);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_13(char const * restrict format, char *param0);

void fa_s13(struct s13 a)
{
  printf("%.13s\n",a.x); /* printf_va_13 */
  return;
}

/*@ requires valid_read_nstring(param0, 14);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_14(char const * restrict format, char *param0);

void fa_s14(struct s14 a)
{
  printf("%.14s\n",a.x); /* printf_va_14 */
  return;
}

/*@ requires valid_read_nstring(param0, 15);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_15(char const * restrict format, char *param0);

void fa_s15(struct s15 a)
{
  printf("%.15s\n",a.x); /* printf_va_15 */
  return;
}

/*@ requires valid_read_nstring(param0, 16);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_16(char const * restrict format, char *param0);

void fa_s16(struct s16 a)
{
  printf("%.16s\n",a.x); /* printf_va_16 */
  return;
}

/*@ requires valid_read_nstring(param0, 17);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_17(char const * restrict format, char *param0);

void fa_s17(struct s17 a)
{
  printf("%.17s\n",a.x); /* printf_va_17 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_18(char const * restrict format, double param0);

void fa_hfa11(struct hfa11 a)
{
  printf("%.1f\n",(double)a.a); /* printf_va_18 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_19(char const * restrict format, double param0, double param1);

void fa_hfa12(struct hfa12 a)
{
  printf("%.1f %.1f\n",(double)a.a,(double)a.a); /* printf_va_19 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_20(char const * restrict format, double param0, double param1,
                 double param2);

void fa_hfa13(struct hfa13 a)
{
  printf("%.1f %.1f %.1f\n",(double)a.a,(double)a.b,(double)a.c); /* printf_va_20 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param3),
            (indirect: param2), (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param3, param2, param1, param0;
 */
int printf_va_21(char const * restrict format, double param0, double param1,
                 double param2, double param3);

void fa_hfa14(struct hfa14 a)
{
  printf("%.1f %.1f %.1f %.1f\n",(double)a.a,(double)a.b,(double)a.c,
         (double)a.d); /* printf_va_21 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_22(char const * restrict format, double param0);

void fa_hfa21(struct hfa21 a)
{
  printf("%.1f\n",a.a); /* printf_va_22 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_23(char const * restrict format, double param0, double param1);

void fa_hfa22(struct hfa22 a)
{
  printf("%.1f %.1f\n",a.a,a.a); /* printf_va_23 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_24(char const * restrict format, double param0, double param1,
                 double param2);

void fa_hfa23(struct hfa23 a)
{
  printf("%.1f %.1f %.1f\n",a.a,a.b,a.c); /* printf_va_24 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param3),
            (indirect: param2), (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param3, param2, param1, param0;
 */
int printf_va_25(char const * restrict format, double param0, double param1,
                 double param2, double param3);

void fa_hfa24(struct hfa24 a)
{
  printf("%.1f %.1f %.1f %.1f\n",a.a,a.b,a.c,a.d); /* printf_va_25 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_26(char const * restrict format, long double param0);

void fa_hfa31(struct hfa31 a)
{
  printf("%.1Lf\n",a.a); /* printf_va_26 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_27(char const * restrict format, long double param0,
                 long double param1);

void fa_hfa32(struct hfa32 a)
{
  printf("%.1Lf %.1Lf\n",a.a,a.a); /* printf_va_27 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param2, param1, param0;
 */
int printf_va_28(char const * restrict format, long double param0,
                 long double param1, long double param2);

void fa_hfa33(struct hfa33 a)
{
  printf("%.1Lf %.1Lf %.1Lf\n",a.a,a.b,a.c); /* printf_va_28 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param3),
            (indirect: param2), (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param3, param2, param1, param0;
 */
int printf_va_29(char const * restrict format, long double param0,
                 long double param1, long double param2, long double param3);

void fa_hfa34(struct hfa34 a)
{
  printf("%.1Lf %.1Lf %.1Lf %.1Lf\n",a.a,a.b,a.c,a.d); /* printf_va_29 */
  return;
}

/*@ requires valid_read_nstring(param0, 3);
    requires valid_read_nstring(param1, 3);
    requires valid_read_nstring(param2, 3);
    requires valid_read_nstring(param3, 3);
    requires valid_read_nstring(param4, 3);
    requires valid_read_nstring(param5, 3);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param5 + (0 ..))),
            (indirect: *(param4 + (0 ..))), (indirect: *(param3 + (0 ..))),
            (indirect: *(param2 + (0 ..))), (indirect: *(param1 + (0 ..))),
            (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param5 + (0 ..)), *(param4 + (0 ..)), *(param3 + (0 ..)),
            *(param2 + (0 ..)), *(param1 + (0 ..)), *(param0 + (0 ..));
 */
int printf_va_30(char const * restrict format, char *param0, char *param1,
                 char *param2, char *param3, char *param4, char *param5);

void fa1(struct s8 a, struct s9 b, struct s10 c, struct s11 d, struct s12 e,
         struct s13 f)
{
  printf("%.3s %.3s %.3s %.3s %.3s %.3s\n",a.x,b.x,c.x,d.x,e.x,f.x); /* printf_va_30 */
  return;
}

/*@ requires valid_read_nstring(param0, 3);
    requires valid_read_nstring(param1, 3);
    requires valid_read_nstring(param2, 3);
    requires valid_read_nstring(param3, 3);
    requires valid_read_nstring(param4, 3);
    requires valid_read_nstring(param5, 3);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param5 + (0 ..))),
            (indirect: *(param4 + (0 ..))), (indirect: *(param3 + (0 ..))),
            (indirect: *(param2 + (0 ..))), (indirect: *(param1 + (0 ..))),
            (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param5 + (0 ..)), *(param4 + (0 ..)), *(param3 + (0 ..)),
            *(param2 + (0 ..)), *(param1 + (0 ..)), *(param0 + (0 ..));
 */
int printf_va_31(char const * restrict format, char *param0, char *param1,
                 char *param2, char *param3, char *param4, char *param5);

void fa2(struct s9 a, struct s10 b, struct s11 c, struct s12 d, struct s13 e,
         struct s14 f)
{
  printf("%.3s %.3s %.3s %.3s %.3s %.3s\n",a.x,b.x,c.x,d.x,e.x,f.x); /* printf_va_31 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param5),
            (indirect: param4), (indirect: param3), (indirect: param2),
            (indirect: param1), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param5, param4, param3, param2, param1, param0;
 */
int printf_va_32(char const * restrict format, double param0, double param1,
                 double param2, double param3, long double param4,
                 long double param5);

void fa3(struct hfa14 a, struct hfa23 b, struct hfa32 c)
{
  printf("%.1f %.1f %.1f %.1f %.1Lf %.1Lf\n",(double)a.a,(double)a.d,b.a,b.c,
         c.a,c.b); /* printf_va_32 */
  return;
}

/*@ requires valid_read_nstring(param0, 1);
    requires valid_read_nstring(param3, 2);
    requires valid_read_nstring(param6, 3);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param8),
            (indirect: param7), (indirect: *(param6 + (0 ..))),
            (indirect: param5), (indirect: param4),
            (indirect: *(param3 + (0 ..))), (indirect: param2),
            (indirect: param1), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param8, param7, *(param6 + (0 ..)), param5, param4,
            *(param3 + (0 ..)), param2, param1, *(param0 + (0 ..));
 */
int printf_va_33(char const * restrict format, char *param0, double param1,
                 double param2, char *param3, double param4, double param5,
                 char *param6, long double param7, long double param8);

void fa4(struct s1 a, struct hfa14 b, struct s2 c, struct hfa24 d,
         struct s3 e, struct hfa34 f)
{
  printf("%.1s %.1f %.1f %.2s %.1f %.1f %.3s %.1Lf %.1Lf\n",a.x,(double)b.a,
         (double)b.d,c.x,d.a,d.d,e.x,f.a,f.d); /* printf_va_33 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_34(char const * restrict format);

void arg(void)
{
  printf("Arguments:\n"); /* printf_va_34 */
  fa_s1(s1);
  fa_s2(s2);
  fa_s3(s3);
  fa_s4(s4);
  fa_s5(s5);
  fa_s6(s6);
  fa_s7(s7);
  fa_s8(s8);
  fa_s9(s9);
  fa_s10(s10);
  fa_s11(s11);
  fa_s12(s12);
  fa_s13(s13);
  fa_s14(s14);
  fa_s15(s15);
  fa_s16(s16);
  fa_s17(s17);
  fa_hfa11(hfa11);
  fa_hfa12(hfa12);
  fa_hfa13(hfa13);
  fa_hfa14(hfa14);
  fa_hfa21(hfa21);
  fa_hfa22(hfa22);
  fa_hfa23(hfa23);
  fa_hfa24(hfa24);
  fa_hfa31(hfa31);
  fa_hfa32(hfa32);
  fa_hfa33(hfa33);
  fa_hfa34(hfa34);
  fa1(s8,s9,s10,s11,s12,s13);
  fa2(s9,s10,s11,s12,s13,s14);
  fa3(hfa14,hfa23,hfa32);
  fa4(s1,hfa14,s2,hfa24,s3,hfa34);
  return;
}

struct s1 fr_s1(void)
{
  return s1;
}

struct s2 fr_s2(void)
{
  return s2;
}

struct s3 fr_s3(void)
{
  return s3;
}

struct s4 fr_s4(void)
{
  return s4;
}

struct s5 fr_s5(void)
{
  return s5;
}

struct s6 fr_s6(void)
{
  return s6;
}

struct s7 fr_s7(void)
{
  return s7;
}

struct s8 fr_s8(void)
{
  return s8;
}

struct s9 fr_s9(void)
{
  return s9;
}

struct s10 fr_s10(void)
{
  return s10;
}

struct s11 fr_s11(void)
{
  return s11;
}

struct s12 fr_s12(void)
{
  return s12;
}

struct s13 fr_s13(void)
{
  return s13;
}

struct s14 fr_s14(void)
{
  return s14;
}

struct s15 fr_s15(void)
{
  return s15;
}

struct s16 fr_s16(void)
{
  return s16;
}

struct s17 fr_s17(void)
{
  return s17;
}

struct hfa11 fr_hfa11(void)
{
  return hfa11;
}

struct hfa12 fr_hfa12(void)
{
  return hfa12;
}

struct hfa13 fr_hfa13(void)
{
  return hfa13;
}

struct hfa14 fr_hfa14(void)
{
  return hfa14;
}

struct hfa21 fr_hfa21(void)
{
  return hfa21;
}

struct hfa22 fr_hfa22(void)
{
  return hfa22;
}

struct hfa23 fr_hfa23(void)
{
  return hfa23;
}

struct hfa24 fr_hfa24(void)
{
  return hfa24;
}

struct hfa31 fr_hfa31(void)
{
  return hfa31;
}

struct hfa32 fr_hfa32(void)
{
  return hfa32;
}

struct hfa33 fr_hfa33(void)
{
  return hfa33;
}

struct hfa34 fr_hfa34(void)
{
  return hfa34;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_35(char const * restrict format);

/*@ requires valid_read_nstring(param0, 1);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_36(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 2);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_37(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 3);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_38(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 4);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_39(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 5);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_40(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 6);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_41(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 7);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_42(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 8);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_43(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 9);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_44(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 10);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_45(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 11);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_46(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 12);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_47(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 13);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_48(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 14);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_49(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 15);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_50(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 16);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_51(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 17);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_52(char const * restrict format, char *param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_53(char const * restrict format, double param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_54(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_55(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_56(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_57(char const * restrict format, double param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_58(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_59(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_60(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_61(char const * restrict format, long double param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_62(char const * restrict format, long double param0,
                 long double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_63(char const * restrict format, long double param0,
                 long double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_64(char const * restrict format, long double param0,
                 long double param1);

void ret(void)
{
  struct hfa11 tmp_16;
  struct hfa12 tmp_17;
  struct hfa12 tmp_18;
  struct hfa13 tmp_19;
  struct hfa13 tmp_20;
  struct hfa14 tmp_21;
  struct hfa14 tmp_22;
  struct hfa21 tmp_23;
  struct hfa22 tmp_24;
  struct hfa22 tmp_25;
  struct hfa23 tmp_26;
  struct hfa23 tmp_27;
  struct hfa24 tmp_28;
  struct hfa24 tmp_29;
  struct hfa31 tmp_30;
  struct hfa32 tmp_31;
  struct hfa32 tmp_32;
  struct hfa33 tmp_33;
  struct hfa33 tmp_34;
  struct hfa34 tmp_35;
  struct hfa34 tmp_36;
  struct s1 t1 = fr_s1();
  struct s2 t2 = fr_s2();
  struct s3 t3 = fr_s3();
  struct s4 t4 = fr_s4();
  struct s5 t5 = fr_s5();
  struct s6 t6 = fr_s6();
  struct s7 t7 = fr_s7();
  struct s8 t8 = fr_s8();
  struct s9 t9 = fr_s9();
  struct s10 t10 = fr_s10();
  struct s11 t11 = fr_s11();
  struct s12 t12 = fr_s12();
  struct s13 t13 = fr_s13();
  struct s14 t14 = fr_s14();
  struct s15 t15 = fr_s15();
  struct s16 t16 = fr_s16();
  struct s17 t17 = fr_s17();
  printf("Return values:\n"); /* printf_va_35 */
  printf("%.1s\n",t1.x); /* printf_va_36 */
  printf("%.2s\n",t2.x); /* printf_va_37 */
  printf("%.3s\n",t3.x); /* printf_va_38 */
  printf("%.4s\n",t4.x); /* printf_va_39 */
  printf("%.5s\n",t5.x); /* printf_va_40 */
  printf("%.6s\n",t6.x); /* printf_va_41 */
  printf("%.7s\n",t7.x); /* printf_va_42 */
  printf("%.8s\n",t8.x); /* printf_va_43 */
  printf("%.9s\n",t9.x); /* printf_va_44 */
  printf("%.10s\n",t10.x); /* printf_va_45 */
  printf("%.11s\n",t11.x); /* printf_va_46 */
  printf("%.12s\n",t12.x); /* printf_va_47 */
  printf("%.13s\n",t13.x); /* printf_va_48 */
  printf("%.14s\n",t14.x); /* printf_va_49 */
  printf("%.15s\n",t15.x); /* printf_va_50 */
  printf("%.16s\n",t16.x); /* printf_va_51 */
  printf("%.17s\n",t17.x); /* printf_va_52 */
  tmp_16 = fr_hfa11();
  printf("%.1f\n",(double)tmp_16.a); /* printf_va_53 */
  tmp_17 = fr_hfa12();
  tmp_18 = fr_hfa12();
  printf("%.1f %.1f\n",(double)tmp_18.a,(double)tmp_17.b); /* printf_va_54 */
  tmp_19 = fr_hfa13();
  tmp_20 = fr_hfa13();
  printf("%.1f %.1f\n",(double)tmp_20.a,(double)tmp_19.c); /* printf_va_55 */
  tmp_21 = fr_hfa14();
  tmp_22 = fr_hfa14();
  printf("%.1f %.1f\n",(double)tmp_22.a,(double)tmp_21.d); /* printf_va_56 */
  tmp_23 = fr_hfa21();
  printf("%.1f\n",tmp_23.a); /* printf_va_57 */
  tmp_24 = fr_hfa22();
  tmp_25 = fr_hfa22();
  printf("%.1f %.1f\n",tmp_25.a,tmp_24.b); /* printf_va_58 */
  tmp_26 = fr_hfa23();
  tmp_27 = fr_hfa23();
  printf("%.1f %.1f\n",tmp_27.a,tmp_26.c); /* printf_va_59 */
  tmp_28 = fr_hfa24();
  tmp_29 = fr_hfa24();
  printf("%.1f %.1f\n",tmp_29.a,tmp_28.d); /* printf_va_60 */
  tmp_30 = fr_hfa31();
  printf("%.1Lf\n",tmp_30.a); /* printf_va_61 */
  tmp_31 = fr_hfa32();
  tmp_32 = fr_hfa32();
  printf("%.1Lf %.1Lf\n",tmp_32.a,tmp_31.b); /* printf_va_62 */
  tmp_33 = fr_hfa33();
  tmp_34 = fr_hfa33();
  printf("%.1Lf %.1Lf\n",tmp_34.a,tmp_33.c); /* printf_va_63 */
  tmp_35 = fr_hfa34();
  tmp_36 = fr_hfa34();
  printf("%.1Lf %.1Lf\n",tmp_36.a,tmp_35.d); /* printf_va_64 */
  return;
}

int match(char const **s, char const *f)
{
  int __retres;
  char const *p = *s;
  p = *s;
  while (1) {
    if (*f) {
      if (! ((int)*f == (int)*p)) break;
    }
    else break;
    f ++;
    p ++;
  }
  if (! *f) {
    *s = p - 1;
    __retres = 1;
    goto return_label;
  }
  __retres = 0;
  return_label: return __retres;
}

/*@ requires valid_read_nstring(param0, 7);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_65(char const * restrict format, char *param0);

/*@ requires valid_read_nstring(param0, 9);
    requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: *(param0 + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            *(param0 + (0 ..));
 */
int printf_va_66(char const * restrict format, char *param0);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_67(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_68(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_69(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_70(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_71(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_72(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_73(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_74(char const * restrict format, double param0, double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_75(char const * restrict format, long double param0,
                 long double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_76(char const * restrict format, long double param0,
                 long double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_77(char const * restrict format, long double param0,
                 long double param1);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param1),
            (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param1, param0;
 */
int printf_va_78(char const * restrict format, long double param0,
                 long double param1);

void myprintf(char const *format, void * const *__va_params)
{
  char const *s;
  va_list ap;
  ap = __va_params;
  s = format;
  while (*s) {
    {
      int tmp_26;
      tmp_26 = match(& s,"%7s");
      if (tmp_26) {
        struct s7 tmp;
        tmp = *((struct s7 *)*ap);
        ap ++;
        struct s7 t7 = tmp;
        printf("%.7s",t7.x); /* printf_va_65 */
      }
      else {
        int tmp_25;
        tmp_25 = match(& s,"%9s");
        if (tmp_25) {
          struct s9 tmp_0;
          tmp_0 = *((struct s9 *)*ap);
          ap ++;
          struct s9 t9 = tmp_0;
          printf("%.9s",t9.x); /* printf_va_66 */
        }
        else {
          int tmp_24;
          tmp_24 = match(& s,"%hfa11");
          if (tmp_24) {
            struct hfa11 tmp_1;
            tmp_1 = *((struct hfa11 *)*ap);
            ap ++;
            struct hfa11 x = tmp_1;
            printf("%.1f,%.1f",(double)x.a,(double)x.a); /* printf_va_67 */
          }
          else {
            int tmp_23;
            tmp_23 = match(& s,"%hfa12");
            if (tmp_23) {
              struct hfa12 tmp_2;
              tmp_2 = *((struct hfa12 *)*ap);
              ap ++;
              struct hfa12 x_0 = tmp_2;
              printf("%.1f,%.1f",(double)x_0.a,(double)x_0.b); /* printf_va_68 */
            }
            else {
              int tmp_22;
              tmp_22 = match(& s,"%hfa13");
              if (tmp_22) {
                struct hfa13 tmp_3;
                tmp_3 = *((struct hfa13 *)*ap);
                ap ++;
                struct hfa13 x_1 = tmp_3;
                printf("%.1f,%.1f",(double)x_1.a,(double)x_1.c); /* printf_va_69 */
              }
              else {
                int tmp_21;
                tmp_21 = match(& s,"%hfa14");
                if (tmp_21) {
                  struct hfa14 tmp_4;
                  tmp_4 = *((struct hfa14 *)*ap);
                  ap ++;
                  struct hfa14 x_2 = tmp_4;
                  printf("%.1f,%.1f",(double)x_2.a,(double)x_2.d); /* printf_va_70 */
                }
                else {
                  int tmp_20;
                  tmp_20 = match(& s,"%hfa21");
                  if (tmp_20) {
                    struct hfa21 tmp_5;
                    tmp_5 = *((struct hfa21 *)*ap);
                    ap ++;
                    struct hfa21 x_3 = tmp_5;
                    printf("%.1f,%.1f",x_3.a,x_3.a); /* printf_va_71 */
                  }
                  else {
                    int tmp_19;
                    tmp_19 = match(& s,"%hfa22");
                    if (tmp_19) {
                      struct hfa22 tmp_6;
                      tmp_6 = *((struct hfa22 *)*ap);
                      ap ++;
                      struct hfa22 x_4 = tmp_6;
                      printf("%.1f,%.1f",x_4.a,x_4.b); /* printf_va_72 */
                    }
                    else {
                      int tmp_18;
                      tmp_18 = match(& s,"%hfa23");
                      if (tmp_18) {
                        struct hfa23 tmp_7;
                        tmp_7 = *((struct hfa23 *)*ap);
                        ap ++;
                        struct hfa23 x_5 = tmp_7;
                        printf("%.1f,%.1f",x_5.a,x_5.c); /* printf_va_73 */
                      }
                      else {
                        int tmp_17;
                        tmp_17 = match(& s,"%hfa24");
                        if (tmp_17) {
                          struct hfa24 tmp_8;
                          tmp_8 = *((struct hfa24 *)*ap);
                          ap ++;
                          struct hfa24 x_6 = tmp_8;
                          printf("%.1f,%.1f",x_6.a,x_6.d); /* printf_va_74 */
                        }
                        else {
                          int tmp_16;
                          tmp_16 = match(& s,"%hfa31");
                          if (tmp_16) {
                            struct hfa31 tmp_9;
                            tmp_9 = *((struct hfa31 *)*ap);
                            ap ++;
                            struct hfa31 x_7 = tmp_9;
                            printf("%.1Lf,%.1Lf",x_7.a,x_7.a); /* printf_va_75 */
                          }
                          else {
                            int tmp_15;
                            tmp_15 = match(& s,"%hfa32");
                            if (tmp_15) {
                              struct hfa32 tmp_10;
                              tmp_10 = *((struct hfa32 *)*ap);
                              ap ++;
                              struct hfa32 x_8 = tmp_10;
                              printf("%.1Lf,%.1Lf",x_8.a,x_8.b); /* printf_va_76 */
                            }
                            else {
                              int tmp_14;
                              tmp_14 = match(& s,"%hfa33");
                              if (tmp_14) {
                                struct hfa33 tmp_11;
                                tmp_11 = *((struct hfa33 *)*ap);
                                ap ++;
                                struct hfa33 x_9 = tmp_11;
                                printf("%.1Lf,%.1Lf",x_9.a,x_9.c); /* printf_va_77 */
                              }
                              else {
                                int tmp_13;
                                tmp_13 = match(& s,"%hfa34");
                                if (tmp_13) {
                                  struct hfa34 tmp_12;
                                  tmp_12 = *((struct hfa34 *)*ap);
                                  ap ++;
                                  struct hfa34 x_10 = tmp_12;
                                  printf("%.1Lf,%.1Lf",x_10.a,x_10.d); /* printf_va_78 */
                                }
                                else putchar((int)*s);
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
    s ++;
  }
  putchar('\n');
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_79(char const * restrict format);

void stdarg(void)
{
  printf("stdarg:\n"); /* printf_va_79 */
  {
    struct s9 __va_arg0 = s9;
    struct s9 __va_arg1 = s9;
    struct s9 __va_arg2 = s9;
    struct s9 __va_arg3 = s9;
    struct s9 __va_arg4 = s9;
    struct s9 __va_arg5 = s9;
    void *__va_args[6] =
      {& __va_arg0,
       & __va_arg1,
       & __va_arg2,
       & __va_arg3,
       & __va_arg4,
       & __va_arg5};
    myprintf("%9s %9s %9s %9s %9s %9s",(void * const *)(__va_args));
  }
  {
    struct s7 __va_arg0_9 = s7;
    struct s9 __va_arg1_11 = s9;
    struct s9 __va_arg2_13 = s9;
    struct s9 __va_arg3_15 = s9;
    struct s9 __va_arg4_17 = s9;
    struct s9 __va_arg5_19 = s9;
    void *__va_args_21[6] =
      {& __va_arg0_9,
       & __va_arg1_11,
       & __va_arg2_13,
       & __va_arg3_15,
       & __va_arg4_17,
       & __va_arg5_19};
    myprintf("%7s %9s %9s %9s %9s %9s",(void * const *)(__va_args_21));
  }
  {
    void *__va_args_23[1] = {(void *)0};
    myprintf("HFA long double:",(void * const *)(__va_args_23));
  }
  {
    struct hfa34 __va_arg0_25 = hfa34;
    struct hfa34 __va_arg1_27 = hfa34;
    struct hfa34 __va_arg2_29 = hfa34;
    struct hfa34 __va_arg3_31 = hfa34;
    void *__va_args_33[4] =
      {& __va_arg0_25, & __va_arg1_27, & __va_arg2_29, & __va_arg3_31};
    myprintf("%hfa34 %hfa34 %hfa34 %hfa34",(void * const *)(__va_args_33));
  }
  {
    struct hfa33 __va_arg0_35 = hfa33;
    struct hfa34 __va_arg1_37 = hfa34;
    struct hfa34 __va_arg2_39 = hfa34;
    struct hfa34 __va_arg3_41 = hfa34;
    void *__va_args_43[4] =
      {& __va_arg0_35, & __va_arg1_37, & __va_arg2_39, & __va_arg3_41};
    myprintf("%hfa33 %hfa34 %hfa34 %hfa34",(void * const *)(__va_args_43));
  }
  {
    struct hfa32 __va_arg0_45 = hfa32;
    struct hfa34 __va_arg1_47 = hfa34;
    struct hfa34 __va_arg2_49 = hfa34;
    struct hfa34 __va_arg3_51 = hfa34;
    void *__va_args_53[4] =
      {& __va_arg0_45, & __va_arg1_47, & __va_arg2_49, & __va_arg3_51};
    myprintf("%hfa32 %hfa34 %hfa34 %hfa34",(void * const *)(__va_args_53));
  }
  {
    struct hfa31 __va_arg0_55 = hfa31;
    struct hfa34 __va_arg1_57 = hfa34;
    struct hfa34 __va_arg2_59 = hfa34;
    struct hfa34 __va_arg3_61 = hfa34;
    void *__va_args_63[4] =
      {& __va_arg0_55, & __va_arg1_57, & __va_arg2_59, & __va_arg3_61};
    myprintf("%hfa31 %hfa34 %hfa34 %hfa34",(void * const *)(__va_args_63));
  }
  {
    struct hfa32 __va_arg0_65 = hfa32;
    struct hfa33 __va_arg1_67 = hfa33;
    struct hfa33 __va_arg2_69 = hfa33;
    struct hfa33 __va_arg3_71 = hfa33;
    struct hfa33 __va_arg4_73 = hfa33;
    void *__va_args_75[5] =
      {& __va_arg0_65,
       & __va_arg1_67,
       & __va_arg2_69,
       & __va_arg3_71,
       & __va_arg4_73};
    myprintf("%hfa32 %hfa33 %hfa33 %hfa33 %hfa33",
             (void * const *)(__va_args_75));
  }
  {
    struct hfa31 __va_arg0_77 = hfa31;
    struct hfa33 __va_arg1_79 = hfa33;
    struct hfa33 __va_arg2_81 = hfa33;
    struct hfa33 __va_arg3_83 = hfa33;
    struct hfa33 __va_arg4_85 = hfa33;
    void *__va_args_87[5] =
      {& __va_arg0_77,
       & __va_arg1_79,
       & __va_arg2_81,
       & __va_arg3_83,
       & __va_arg4_85};
    myprintf("%hfa31 %hfa33 %hfa33 %hfa33 %hfa33",
             (void * const *)(__va_args_87));
  }
  {
    struct hfa33 __va_arg0_89 = hfa33;
    struct hfa33 __va_arg1_91 = hfa33;
    struct hfa33 __va_arg2_93 = hfa33;
    struct hfa33 __va_arg3_95 = hfa33;
    void *__va_args_97[4] =
      {& __va_arg0_89, & __va_arg1_91, & __va_arg2_93, & __va_arg3_95};
    myprintf("%hfa33 %hfa33 %hfa33 %hfa33",(void * const *)(__va_args_97));
  }
  {
    struct hfa34 __va_arg0_99 = hfa34;
    struct hfa32 __va_arg1_101 = hfa32;
    struct hfa32 __va_arg2_103 = hfa32;
    struct hfa32 __va_arg3_105 = hfa32;
    struct hfa32 __va_arg4_107 = hfa32;
    void *__va_args_109[5] =
      {& __va_arg0_99,
       & __va_arg1_101,
       & __va_arg2_103,
       & __va_arg3_105,
       & __va_arg4_107};
    myprintf("%hfa34 %hfa32 %hfa32 %hfa32 %hfa32",
             (void * const *)(__va_args_109));
  }
  {
    struct hfa33 __va_arg0_111 = hfa33;
    struct hfa32 __va_arg1_113 = hfa32;
    struct hfa32 __va_arg2_115 = hfa32;
    struct hfa32 __va_arg3_117 = hfa32;
    struct hfa32 __va_arg4_119 = hfa32;
    void *__va_args_121[5] =
      {& __va_arg0_111,
       & __va_arg1_113,
       & __va_arg2_115,
       & __va_arg3_117,
       & __va_arg4_119};
    myprintf("%hfa33 %hfa32 %hfa32 %hfa32 %hfa32",
             (void * const *)(__va_args_121));
  }
  {
    struct hfa34 __va_arg0_123 = hfa34;
    struct hfa32 __va_arg1_125 = hfa32;
    struct hfa31 __va_arg2_127 = hfa31;
    struct hfa31 __va_arg3_129 = hfa31;
    struct hfa31 __va_arg4_131 = hfa31;
    struct hfa31 __va_arg5_133 = hfa31;
    void *__va_args_135[6] =
      {& __va_arg0_123,
       & __va_arg1_125,
       & __va_arg2_127,
       & __va_arg3_129,
       & __va_arg4_131,
       & __va_arg5_133};
    myprintf("%hfa34 %hfa32 %hfa31 %hfa31 %hfa31 %hfa31",
             (void * const *)(__va_args_135));
  }
  {
    void *__va_args_137[1] = {(void *)0};
    myprintf("HFA double:",(void * const *)(__va_args_137));
  }
  {
    struct hfa24 __va_arg0_139 = hfa24;
    struct hfa24 __va_arg1_141 = hfa24;
    struct hfa24 __va_arg2_143 = hfa24;
    struct hfa24 __va_arg3_145 = hfa24;
    void *__va_args_147[4] =
      {& __va_arg0_139, & __va_arg1_141, & __va_arg2_143, & __va_arg3_145};
    myprintf("%hfa24 %hfa24 %hfa24 %hfa24",(void * const *)(__va_args_147));
  }
  {
    struct hfa23 __va_arg0_149 = hfa23;
    struct hfa24 __va_arg1_151 = hfa24;
    struct hfa24 __va_arg2_153 = hfa24;
    struct hfa24 __va_arg3_155 = hfa24;
    void *__va_args_157[4] =
      {& __va_arg0_149, & __va_arg1_151, & __va_arg2_153, & __va_arg3_155};
    myprintf("%hfa23 %hfa24 %hfa24 %hfa24",(void * const *)(__va_args_157));
  }
  {
    struct hfa22 __va_arg0_159 = hfa22;
    struct hfa24 __va_arg1_161 = hfa24;
    struct hfa24 __va_arg2_163 = hfa24;
    struct hfa24 __va_arg3_165 = hfa24;
    void *__va_args_167[4] =
      {& __va_arg0_159, & __va_arg1_161, & __va_arg2_163, & __va_arg3_165};
    myprintf("%hfa22 %hfa24 %hfa24 %hfa24",(void * const *)(__va_args_167));
  }
  {
    struct hfa21 __va_arg0_169 = hfa21;
    struct hfa24 __va_arg1_171 = hfa24;
    struct hfa24 __va_arg2_173 = hfa24;
    struct hfa24 __va_arg3_175 = hfa24;
    void *__va_args_177[4] =
      {& __va_arg0_169, & __va_arg1_171, & __va_arg2_173, & __va_arg3_175};
    myprintf("%hfa21 %hfa24 %hfa24 %hfa24",(void * const *)(__va_args_177));
  }
  {
    struct hfa22 __va_arg0_179 = hfa22;
    struct hfa23 __va_arg1_181 = hfa23;
    struct hfa23 __va_arg2_183 = hfa23;
    struct hfa23 __va_arg3_185 = hfa23;
    struct hfa23 __va_arg4_187 = hfa23;
    void *__va_args_189[5] =
      {& __va_arg0_179,
       & __va_arg1_181,
       & __va_arg2_183,
       & __va_arg3_185,
       & __va_arg4_187};
    myprintf("%hfa22 %hfa23 %hfa23 %hfa23 %hfa23",
             (void * const *)(__va_args_189));
  }
  {
    struct hfa21 __va_arg0_191 = hfa21;
    struct hfa23 __va_arg1_193 = hfa23;
    struct hfa23 __va_arg2_195 = hfa23;
    struct hfa23 __va_arg3_197 = hfa23;
    struct hfa23 __va_arg4_199 = hfa23;
    void *__va_args_201[5] =
      {& __va_arg0_191,
       & __va_arg1_193,
       & __va_arg2_195,
       & __va_arg3_197,
       & __va_arg4_199};
    myprintf("%hfa21 %hfa23 %hfa23 %hfa23 %hfa23",
             (void * const *)(__va_args_201));
  }
  {
    struct hfa23 __va_arg0_203 = hfa23;
    struct hfa23 __va_arg1_205 = hfa23;
    struct hfa23 __va_arg2_207 = hfa23;
    struct hfa23 __va_arg3_209 = hfa23;
    void *__va_args_211[4] =
      {& __va_arg0_203, & __va_arg1_205, & __va_arg2_207, & __va_arg3_209};
    myprintf("%hfa23 %hfa23 %hfa23 %hfa23",(void * const *)(__va_args_211));
  }
  {
    struct hfa24 __va_arg0_213 = hfa24;
    struct hfa22 __va_arg1_215 = hfa22;
    struct hfa22 __va_arg2_217 = hfa22;
    struct hfa22 __va_arg3_219 = hfa22;
    struct hfa22 __va_arg4_221 = hfa22;
    void *__va_args_223[5] =
      {& __va_arg0_213,
       & __va_arg1_215,
       & __va_arg2_217,
       & __va_arg3_219,
       & __va_arg4_221};
    myprintf("%hfa24 %hfa22 %hfa22 %hfa22 %hfa22",
             (void * const *)(__va_args_223));
  }
  {
    struct hfa23 __va_arg0_225 = hfa23;
    struct hfa22 __va_arg1_227 = hfa22;
    struct hfa22 __va_arg2_229 = hfa22;
    struct hfa22 __va_arg3_231 = hfa22;
    struct hfa22 __va_arg4_233 = hfa22;
    void *__va_args_235[5] =
      {& __va_arg0_225,
       & __va_arg1_227,
       & __va_arg2_229,
       & __va_arg3_231,
       & __va_arg4_233};
    myprintf("%hfa23 %hfa22 %hfa22 %hfa22 %hfa22",
             (void * const *)(__va_args_235));
  }
  {
    struct hfa24 __va_arg0_237 = hfa24;
    struct hfa22 __va_arg1_239 = hfa22;
    struct hfa21 __va_arg2_241 = hfa21;
    struct hfa21 __va_arg3_243 = hfa21;
    struct hfa21 __va_arg4_245 = hfa21;
    struct hfa21 __va_arg5_247 = hfa21;
    void *__va_args_249[6] =
      {& __va_arg0_237,
       & __va_arg1_239,
       & __va_arg2_241,
       & __va_arg3_243,
       & __va_arg4_245,
       & __va_arg5_247};
    myprintf("%hfa24 %hfa22 %hfa21 %hfa21 %hfa21 %hfa21",
             (void * const *)(__va_args_249));
  }
  {
    void *__va_args_251[1] = {(void *)0};
    myprintf("HFA float:",(void * const *)(__va_args_251));
  }
  {
    struct hfa14 __va_arg0_253 = hfa14;
    struct hfa14 __va_arg1_255 = hfa14;
    struct hfa14 __va_arg2_257 = hfa14;
    struct hfa14 __va_arg3_259 = hfa14;
    void *__va_args_261[4] =
      {& __va_arg0_253, & __va_arg1_255, & __va_arg2_257, & __va_arg3_259};
    myprintf("%hfa14 %hfa14 %hfa14 %hfa14",(void * const *)(__va_args_261));
  }
  {
    struct hfa13 __va_arg0_263 = hfa13;
    struct hfa14 __va_arg1_265 = hfa14;
    struct hfa14 __va_arg2_267 = hfa14;
    struct hfa14 __va_arg3_269 = hfa14;
    void *__va_args_271[4] =
      {& __va_arg0_263, & __va_arg1_265, & __va_arg2_267, & __va_arg3_269};
    myprintf("%hfa13 %hfa14 %hfa14 %hfa14",(void * const *)(__va_args_271));
  }
  {
    struct hfa12 __va_arg0_273 = hfa12;
    struct hfa14 __va_arg1_275 = hfa14;
    struct hfa14 __va_arg2_277 = hfa14;
    struct hfa14 __va_arg3_279 = hfa14;
    void *__va_args_281[4] =
      {& __va_arg0_273, & __va_arg1_275, & __va_arg2_277, & __va_arg3_279};
    myprintf("%hfa12 %hfa14 %hfa14 %hfa14",(void * const *)(__va_args_281));
  }
  {
    struct hfa11 __va_arg0_283 = hfa11;
    struct hfa14 __va_arg1_285 = hfa14;
    struct hfa14 __va_arg2_287 = hfa14;
    struct hfa14 __va_arg3_289 = hfa14;
    void *__va_args_291[4] =
      {& __va_arg0_283, & __va_arg1_285, & __va_arg2_287, & __va_arg3_289};
    myprintf("%hfa11 %hfa14 %hfa14 %hfa14",(void * const *)(__va_args_291));
  }
  {
    struct hfa12 __va_arg0_293 = hfa12;
    struct hfa13 __va_arg1_295 = hfa13;
    struct hfa13 __va_arg2_297 = hfa13;
    struct hfa13 __va_arg3_299 = hfa13;
    struct hfa13 __va_arg4_301 = hfa13;
    void *__va_args_303[5] =
      {& __va_arg0_293,
       & __va_arg1_295,
       & __va_arg2_297,
       & __va_arg3_299,
       & __va_arg4_301};
    myprintf("%hfa12 %hfa13 %hfa13 %hfa13 %hfa13",
             (void * const *)(__va_args_303));
  }
  {
    struct hfa11 __va_arg0_305 = hfa11;
    struct hfa13 __va_arg1_307 = hfa13;
    struct hfa13 __va_arg2_309 = hfa13;
    struct hfa13 __va_arg3_311 = hfa13;
    struct hfa13 __va_arg4_313 = hfa13;
    void *__va_args_315[5] =
      {& __va_arg0_305,
       & __va_arg1_307,
       & __va_arg2_309,
       & __va_arg3_311,
       & __va_arg4_313};
    myprintf("%hfa11 %hfa13 %hfa13 %hfa13 %hfa13",
             (void * const *)(__va_args_315));
  }
  {
    struct hfa13 __va_arg0_317 = hfa13;
    struct hfa13 __va_arg1_319 = hfa13;
    struct hfa13 __va_arg2_321 = hfa13;
    struct hfa13 __va_arg3_323 = hfa13;
    void *__va_args_325[4] =
      {& __va_arg0_317, & __va_arg1_319, & __va_arg2_321, & __va_arg3_323};
    myprintf("%hfa13 %hfa13 %hfa13 %hfa13",(void * const *)(__va_args_325));
  }
  {
    struct hfa14 __va_arg0_327 = hfa14;
    struct hfa12 __va_arg1_329 = hfa12;
    struct hfa12 __va_arg2_331 = hfa12;
    struct hfa12 __va_arg3_333 = hfa12;
    struct hfa12 __va_arg4_335 = hfa12;
    void *__va_args_337[5] =
      {& __va_arg0_327,
       & __va_arg1_329,
       & __va_arg2_331,
       & __va_arg3_333,
       & __va_arg4_335};
    myprintf("%hfa14 %hfa12 %hfa12 %hfa12 %hfa12",
             (void * const *)(__va_args_337));
  }
  {
    struct hfa13 __va_arg0_339 = hfa13;
    struct hfa12 __va_arg1_341 = hfa12;
    struct hfa12 __va_arg2_343 = hfa12;
    struct hfa12 __va_arg3_345 = hfa12;
    struct hfa12 __va_arg4_347 = hfa12;
    void *__va_args_349[5] =
      {& __va_arg0_339,
       & __va_arg1_341,
       & __va_arg2_343,
       & __va_arg3_345,
       & __va_arg4_347};
    myprintf("%hfa13 %hfa12 %hfa12 %hfa12 %hfa12",
             (void * const *)(__va_args_349));
  }
  {
    struct hfa14 __va_arg0_351 = hfa14;
    struct hfa12 __va_arg1_353 = hfa12;
    struct hfa11 __va_arg2_355 = hfa11;
    struct hfa11 __va_arg3_357 = hfa11;
    struct hfa11 __va_arg4_359 = hfa11;
    struct hfa11 __va_arg5_361 = hfa11;
    void *__va_args_363[6] =
      {& __va_arg0_351,
       & __va_arg1_353,
       & __va_arg2_355,
       & __va_arg3_357,
       & __va_arg4_359,
       & __va_arg5_361};
    myprintf("%hfa14 %hfa12 %hfa11 %hfa11 %hfa11 %hfa11",
             (void * const *)(__va_args_363));
  }
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..))), (indirect: param0);
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..))),
            param0;
 */
int printf_va_80(char const * restrict format, unsigned long long param0);

void pll(unsigned long long x)
{
  printf("%llx\n",x); /* printf_va_80 */
  return;
}

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_81(char const * restrict format);

void movi(void)
{
  printf("MOVI:\n"); /* printf_va_81 */
  pll((unsigned long long)0);
  pll((unsigned long long)0xabcd);
  pll((unsigned long long)0xabcd0000);
  pll((unsigned long long)0xabcd00000000);
  pll((unsigned long long)0xabcd000000000000);
  pll((unsigned long long)0xffffabcd);
  pll((unsigned long long)0xabcdffff);
  pll((unsigned long long)0xffffffffffffabcd);
  pll((unsigned long long)0xffffffffabcdffff);
  pll((unsigned long long)0xffffabcdffffffff);
  pll((unsigned long long)0xabcdffffffffffff);
  pll((unsigned long long)0xaaaaaaaa);
  pll((unsigned long long)0x5555555555555555);
  pll((unsigned long long)0x77777777);
  pll((unsigned long long)0x3333333333333333);
  pll((unsigned long long)0xf8f8f8f8);
  pll((unsigned long long)0x1e1e1e1e1e1e1e1e);
  pll((unsigned long long)0x3f803f80);
  pll((unsigned long long)0x01ff01ff01ff01ff);
  pll((unsigned long long)0x007fffc0);
  pll((unsigned long long)0x03fff80003fff800);
  pll((unsigned long long)0x0007fffffffffe00);
  pll((unsigned long long)0xabcd1234);
  pll((unsigned long long)0xabcd00001234);
  pll((unsigned long long)0xabcd000000001234);
  pll((unsigned long long)0xabcd12340000);
  pll((unsigned long long)0xabcd000012340000);
  pll((unsigned long long)0xabcd123400000000);
  pll((unsigned long long)0xffffffffabcd1234);
  pll((unsigned long long)0xffffabcdffff1234);
  pll((unsigned long long)0xabcdffffffff1234);
  pll((unsigned long long)0xffffabcd1234ffff);
  pll((unsigned long long)0xabcdffff1234ffff);
  pll((unsigned long long)0xabcd1234ffffffff);
  pll((unsigned long long)0xffffef0123456789);
  pll((unsigned long long)0xabcdef012345ffff);
  pll((unsigned long long)0xabcdef0123456789);
  return;
}

static uint32_t addip0(uint32_t x)
{
  uint32_t __retres;
  __retres = x + (uint32_t)0;
  return __retres;
}

static uint64_t sublp0(uint64_t x)
{
  uint64_t __retres;
  __retres = x - (uint64_t)0;
  return __retres;
}

static uint32_t addip123(uint32_t x)
{
  uint32_t __retres;
  __retres = x + (uint32_t)123;
  return __retres;
}

static uint64_t addlm123(uint64_t x)
{
  uint64_t __retres;
  __retres = x + (uint64_t)(-123);
  return __retres;
}

static uint64_t sublp4095(uint64_t x)
{
  uint64_t __retres;
  __retres = x - (uint64_t)4095;
  return __retres;
}

static uint32_t subim503808(uint32_t x)
{
  uint32_t __retres;
  __retres = x - (uint32_t)(-503808);
  return __retres;
}

static uint64_t addp12345(uint64_t x)
{
  uint64_t __retres;
  __retres = x + (uint64_t)12345;
  return __retres;
}

static uint32_t subp12345(uint32_t x)
{
  uint32_t __retres;
  __retres = x - (uint32_t)12345;
  return __retres;
}

static uint32_t mvni(uint32_t x)
{
  uint32_t __retres;
  __retres = 0xffffffff - x;
  return __retres;
}

static uint64_t negl(uint64_t x)
{
  uint64_t __retres;
  __retres = (uint64_t)0 - x;
  return __retres;
}

static uint32_t rsbi123(uint32_t x)
{
  uint32_t __retres;
  __retres = (uint32_t)123 - x;
  return __retres;
}

static uint64_t rsbl123(uint64_t x)
{
  uint64_t __retres;
  __retres = (uint64_t)123 - x;
  return __retres;
}

static uint32_t andi0(uint32_t x)
{
  uint32_t __retres;
  __retres = x & (unsigned int)0;
  return __retres;
}

static uint64_t andlm1(uint64_t x)
{
  uint64_t __retres;
  __retres = x & (unsigned long)(-1);
  return __retres;
}

static uint64_t orrl0(uint64_t x)
{
  uint64_t __retres;
  __retres = x | (unsigned long)0;
  return __retres;
}

static uint32_t orrim1(uint32_t x)
{
  uint32_t __retres;
  __retres = x | (unsigned int)(-1);
  return __retres;
}

static uint32_t eori0(uint32_t x)
{
  uint32_t __retres;
  __retres = x ^ (unsigned int)0;
  return __retres;
}

static uint64_t eorlm1(uint64_t x)
{
  uint64_t __retres;
  __retres = x ^ (unsigned long)(-1);
  return __retres;
}

static uint32_t and0xf0(uint32_t x)
{
  uint32_t __retres;
  __retres = x & (unsigned int)0xf0;
  return __retres;
}

static uint64_t orr0xf0(uint64_t x)
{
  uint64_t __retres;
  __retres = x | (unsigned long)0xf0;
  return __retres;
}

static uint64_t eor0xf0(uint64_t x)
{
  uint64_t __retres;
  __retres = x ^ (unsigned long)0xf0;
  return __retres;
}

static uint32_t lsli0(uint32_t x)
{
  uint32_t __retres;
  __retres = x << 0;
  return __retres;
}

static uint32_t lsri0(uint32_t x)
{
  uint32_t __retres;
  __retres = x >> 0;
  return __retres;
}

static int64_t asrl0(int64_t x)
{
  int64_t __retres;
  __retres = x >> 0;
  return __retres;
}

static uint32_t lsli1(uint32_t x)
{
  uint32_t __retres;
  __retres = x << 1;
  return __retres;
}

static uint32_t lsli31(uint32_t x)
{
  uint32_t __retres;
  __retres = x << 31;
  return __retres;
}

static uint64_t lsll1(uint64_t x)
{
  uint64_t __retres;
  __retres = x << 1;
  return __retres;
}

static uint64_t lsll63(uint64_t x)
{
  uint64_t __retres;
  __retres = x << 63;
  return __retres;
}

static uint32_t lsri1(uint32_t x)
{
  uint32_t __retres;
  __retres = x >> 1;
  return __retres;
}

static uint32_t lsri31(uint32_t x)
{
  uint32_t __retres;
  __retres = x >> 31;
  return __retres;
}

static uint64_t lsrl1(uint64_t x)
{
  uint64_t __retres;
  __retres = x >> 1;
  return __retres;
}

static uint64_t lsrl63(uint64_t x)
{
  uint64_t __retres;
  __retres = x >> 63;
  return __retres;
}

static int32_t asri1(int32_t x)
{
  int32_t __retres;
  __retres = x >> 1;
  return __retres;
}

static int32_t asri31(int32_t x)
{
  int32_t __retres;
  __retres = x >> 31;
  return __retres;
}

static int64_t asrl1(int64_t x)
{
  int64_t __retres;
  __retres = x >> 1;
  return __retres;
}

static int64_t asrl63(int64_t x)
{
  int64_t __retres;
  __retres = x >> 63;
  return __retres;
}

void opi(void)
{
  uint32_t tmp;
  uint64_t tmp_0;
  uint32_t tmp_1;
  uint64_t tmp_2;
  uint64_t tmp_3;
  uint32_t tmp_4;
  uint64_t tmp_5;
  uint32_t tmp_6;
  uint32_t tmp_7;
  uint64_t tmp_8;
  uint32_t tmp_9;
  uint64_t tmp_10;
  uint32_t tmp_11;
  uint64_t tmp_12;
  uint64_t tmp_13;
  uint32_t tmp_14;
  uint32_t tmp_15;
  uint64_t tmp_16;
  uint32_t tmp_17;
  uint64_t tmp_18;
  uint64_t tmp_19;
  uint32_t tmp_20;
  uint32_t tmp_21;
  int64_t tmp_22;
  uint32_t tmp_23;
  uint32_t tmp_24;
  uint64_t tmp_25;
  uint64_t tmp_26;
  uint32_t tmp_27;
  uint32_t tmp_28;
  uint64_t tmp_29;
  uint64_t tmp_30;
  int32_t tmp_31;
  int32_t tmp_32;
  int64_t tmp_33;
  int64_t tmp_34;
  int x = 1000;
  tmp = addip0((uint32_t)x);
  pll((unsigned long long)tmp);
  tmp_0 = sublp0((uint64_t)x);
  pll((unsigned long long)tmp_0);
  tmp_1 = addip123((uint32_t)x);
  pll((unsigned long long)tmp_1);
  tmp_2 = addlm123((uint64_t)x);
  pll((unsigned long long)tmp_2);
  tmp_3 = sublp4095((uint64_t)x);
  pll((unsigned long long)tmp_3);
  tmp_4 = subim503808((uint32_t)x);
  pll((unsigned long long)tmp_4);
  tmp_5 = addp12345((uint64_t)x);
  pll((unsigned long long)tmp_5);
  tmp_6 = subp12345((uint32_t)x);
  pll((unsigned long long)tmp_6);
  tmp_7 = mvni((uint32_t)x);
  pll((unsigned long long)tmp_7);
  tmp_8 = negl((uint64_t)x);
  pll((unsigned long long)tmp_8);
  tmp_9 = rsbi123((uint32_t)x);
  pll((unsigned long long)tmp_9);
  tmp_10 = rsbl123((uint64_t)x);
  pll((unsigned long long)tmp_10);
  tmp_11 = andi0((uint32_t)x);
  pll((unsigned long long)tmp_11);
  tmp_12 = andlm1((uint64_t)x);
  pll((unsigned long long)tmp_12);
  tmp_13 = orrl0((uint64_t)x);
  pll((unsigned long long)tmp_13);
  tmp_14 = orrim1((uint32_t)x);
  pll((unsigned long long)tmp_14);
  tmp_15 = eori0((uint32_t)x);
  pll((unsigned long long)tmp_15);
  tmp_16 = eorlm1((uint64_t)x);
  pll((unsigned long long)tmp_16);
  tmp_17 = and0xf0((uint32_t)x);
  pll((unsigned long long)tmp_17);
  tmp_18 = orr0xf0((uint64_t)x);
  pll((unsigned long long)tmp_18);
  tmp_19 = eor0xf0((uint64_t)x);
  pll((unsigned long long)tmp_19);
  tmp_20 = lsli0((uint32_t)x);
  pll((unsigned long long)tmp_20);
  tmp_21 = lsri0((uint32_t)x);
  pll((unsigned long long)tmp_21);
  tmp_22 = asrl0((int64_t)x);
  pll((unsigned long long)tmp_22);
  tmp_23 = lsli1((uint32_t)x);
  pll((unsigned long long)tmp_23);
  tmp_24 = lsli31((uint32_t)x);
  pll((unsigned long long)tmp_24);
  tmp_25 = lsll1((uint64_t)x);
  pll((unsigned long long)tmp_25);
  tmp_26 = lsll63((uint64_t)x);
  pll((unsigned long long)tmp_26);
  tmp_27 = lsri1((uint32_t)x);
  pll((unsigned long long)tmp_27);
  tmp_28 = lsri31((uint32_t)x);
  pll((unsigned long long)tmp_28);
  tmp_29 = lsrl1((uint64_t)x);
  pll((unsigned long long)tmp_29);
  tmp_30 = lsrl63((uint64_t)x);
  pll((unsigned long long)tmp_30);
  tmp_31 = asri1(x);
  pll((unsigned long long)tmp_31);
  tmp_32 = asri31(x);
  pll((unsigned long long)tmp_32);
  tmp_33 = asrl1((int64_t)x);
  pll((unsigned long long)tmp_33);
  tmp_34 = asrl63((int64_t)x);
  pll((unsigned long long)tmp_34);
  return;
}

void pcs(void)
{
  arg();
  ret();
  stdarg();
  movi();
  opi();
  return;
}

int main(void)
{
  int __retres;
  pcs();
  __retres = 0;
  return __retres;
}


