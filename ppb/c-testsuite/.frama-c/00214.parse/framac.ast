/* Generated by Frama-C */
typedef unsigned long size_t;
size_t _brk_start;
size_t _brk_end;
/*@ assigns \result;
    assigns \result \from (indirect: *(param0 + (0 ..))); */
int printf_va_1(char const *param0);

void *extend_brk(size_t size, size_t align)
{
  size_t mask = align - (size_t)1;
  void *ret = (void *)0;
  if ((long)(! (! (_brk_start == (size_t)0)))) printf("wrong1\n"); /* printf_va_1 */
  _brk_end = (_brk_end + mask) & ~ mask;
  ret = (void *)_brk_end;
  _brk_end += size;
  return ret;
}

/*@ assigns \result;
    assigns \result \from (indirect: *(param0 + (0 ..))); */
int printf_va_2(char const *param0);

/*@ assigns \result;
    assigns \result \from (indirect: *(param0 + (0 ..))); */
int printf_va_3(char const *param0);

static void get_args(int a, int b)
{
  if (a != 1) printf("wrong2\n"); /* printf_va_2 */
  else printf("okay\n"); /* printf_va_3 */
  return;
}

/*@ assigns \result;
    assigns \result \from (indirect: *(param0 + (0 ..))); */
int printf_va_4(char const *param0);

void bla(void)
{
  int __ret = 42;
  {
    if ((long)(! (! 0))) {
      if ((long)(! (! __ret))) printf("wrong3\n"); /* printf_va_4 */
      int x = ! (! __ret);
    }
    int tmp = __ret;
  }
  get_args(! (! __ret),(int)sizeof(__ret));
  return;
}

_Bool chk(unsigned long addr, unsigned long limit, unsigned long size)
{
  _Bool __retres;
  _Bool ret;
  /*@ assert missing_return: \false; */ ;
  __retres = (_Bool)0;
  return __retres;
}

/*@ assigns \result;
    assigns \result \from (indirect: *(param0 + (0 ..))); */
int printf_va_5(char const *param0);

/*@ assigns \result;
    assigns \result \from (indirect: *(param0 + (0 ..))); */
int printf_va_6(char const *param0);

int main(void)
{
  int __retres;
  void *r;
  _brk_start = (size_t)1024;
  _brk_end = (size_t)1024;
  r = extend_brk((size_t)4096,(size_t)16);
  if (! r) printf("wrong4\n"); /* printf_va_5 */
  else printf("okay\n"); /* printf_va_6 */
  bla();
  __retres = 0;
  return __retres;
}


