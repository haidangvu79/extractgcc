/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_1(char const * restrict format);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_2(char const * restrict format);

int main(void)
{
  int __retres;
  if (sizeof(short) == (unsigned long)2) {
    if (sizeof(int) == (unsigned long)4) {
      if (sizeof(long) == (unsigned long)8) {
        if (sizeof(long long) == (unsigned long)8) {
          if (sizeof(void *) == (unsigned long)8) printf("Ok\n"); /* printf_va_1 */
          else goto _LAND_2;
        }
        else goto _LAND_2;
      }
      else goto _LAND_2;
    }
    else goto _LAND_2;
  }
  else _LAND_2: printf("KO __LP64__\n"); /* printf_va_2 */
  __retres = 0;
  return __retres;
}


