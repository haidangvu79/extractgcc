/* Generated by Frama-C */
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
struct wchar {
   char *data ;
   char mem[1] ;
};
struct wint {
   char *data ;
   int mem[1] ;
};
int f1char(void)
{
  int __retres;
  char s[9] =
    {(char)'n',
     (char)'o',
     (char)'n',
     (char)'o',
     (char)'n',
     (char)'o',
     (char)'\000'};
  struct wchar q = {.data = (char *)"bugs", .mem = {(char)0}};
  __retres = ! s[0];
  return __retres;
}

int f1int(void)
{
  int __retres;
  char s[9] =
    {(char)'n',
     (char)'o',
     (char)'n',
     (char)'o',
     (char)'n',
     (char)'o',
     (char)'\000'};
  struct wint q = {.data = (char *)"bugs", .mem = {0}};
  __retres = ! s[0];
  return __retres;
}

int main(void);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_1(char const * restrict format);

/*@ requires valid_read_string(format);
    assigns \result, __fc_stdout->__fc_FILE_data;
    assigns \result
      \from (indirect: __fc_stdout->__fc_FILE_id),
            (indirect: __fc_stdout->__fc_FILE_data),
            (indirect: *(format + (0 ..)));
    assigns __fc_stdout->__fc_FILE_data
      \from (indirect: __fc_stdout->__fc_FILE_id),
            __fc_stdout->__fc_FILE_data, (indirect: *(format + (0 ..)));
 */
int printf_va_2(char const * restrict format);

int main(void)
{
  int __retres;
  int tmp;
  char s[9] =
    {(char)'n',
     (char)'o',
     (char)'n',
     (char)'o',
     (char)'n',
     (char)'o',
     (char)'\000'};
  tmp = f1char();
  if (tmp) printf("bla\n"); /* printf_va_1 */
  else {
    int tmp_0;
    tmp_0 = f1int();
    if (tmp_0) printf("bla\n"); /* printf_va_2 */
  }
  __retres = ! s[0];
  return __retres;
}


