/* Generated by Frama-C */
#include "__fc_builtin.h"
#include "assert.h"
#include "ctype.h"
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
#include "string.h"
#include "strings.h"
static int parse_expression_list(char *str)
{
  int __retres;
  char str2[2];
  int start = 0;
  int i = -1;
  int j = -1;
  if (! str) {
    __retres = -1;
    goto return_label;
  }
  while (1) {
    i ++;
    switch ((int)*(str + i)) {
      case 0: while ((int)*(str + start) == ' ') start ++;
      j = i - 1;
      if (start <= j) {
        if ((j - start) + 1 >= 2) {
          __retres = -1;
          goto return_label;
        }
        __FC_assert(((j - start) + 1 < 2) != 0,
                    "programs/apps/OpenSER/CVE-2006-6749/parse_expression_list/cases1_stripSpacesStart_arr_inlined_ok.c",
                    30,"j-start+1 < EXPRESSION_LENGTH");
        strncpy(str2,(char const *)(str + start),(size_t)((j - start) + 1));
        str2[(j - start) + 1] = (char)0;
      }
      else {
        __retres = -1;
        goto return_label;
      }
      start = i + 1;
    }
    if (! ((int)*(str + i) != 0)) break;
  }
  __retres = 0;
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  char A[((2 + 2) + 4) + 1];
  Frama_C_make_unknown(A,(size_t)((2 + 2) + 4));
  A[(2 + 2) + 4] = (char)0;
  parse_expression_list(A);
  __retres = 0;
  return __retres;
}


