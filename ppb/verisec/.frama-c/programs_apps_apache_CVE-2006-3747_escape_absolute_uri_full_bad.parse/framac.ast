/* Generated by Frama-C */
#include "__fc_builtin.h"
#include "assert.h"
#include "ctype.h"
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
#include "string.h"
#include "strings.h"
void escape_absolute_uri(char *uri, int scheme)
{
  int cp;
  char *token[2 + 1];
  int c;
  if (scheme == 0) goto _LOR;
  else {
    size_t tmp;
    tmp = strlen((char const *)uri);
    ;
    if (tmp < (size_t)scheme) _LOR: goto return_label;
  }
  cp = scheme;
  if ((int)*(uri + (cp - 1)) == '/') {
    int tmp_0;
    while (1) {
      if ((int)*(uri + cp) != 0) {
        if (! ((int)*(uri + cp) != '/')) break;
      }
      else break;
      cp ++;
    }
    if ((int)*(uri + cp) == 0) goto return_label;
    else 
      if ((int)*(uri + (cp + 1)) == 0) goto return_label;
    cp ++;
    scheme = cp;
    tmp_0 = strncmp((char const *)uri,"ldap",(size_t)4);
    if (tmp_0 == 0) {
      c = 0;
      token[0] = uri;
      while (1) {
        if ((int)*(uri + cp) != 0) {
          if (! (c < 2 + 1)) break;
        }
        else break;
        if ((int)*(uri + cp) == '?') {
          c ++;
          token[c] = (uri + cp) + 1;
          *(uri + cp) = (char)0;
        }
        cp ++;
      }
      goto return_label;
    }
  }
  return_label: return;
}

int main(void)
{
  int __retres;
  char uri[((((4 + 1) + 1) + 2) + 1) + 2];
  int scheme;
  Frama_C_make_unknown(uri,(size_t)((((((4 + 1) + 1) + 2) + 1) + 2) - 1));
  uri[(((((4 + 1) + 1) + 2) + 1) + 2) - 1] = (char)0;
  scheme = 4 + 2;
  escape_absolute_uri(uri,scheme);
  __retres = 0;
  return __retres;
}


