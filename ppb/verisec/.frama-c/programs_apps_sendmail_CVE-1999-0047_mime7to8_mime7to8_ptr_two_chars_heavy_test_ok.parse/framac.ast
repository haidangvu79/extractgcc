/* Generated by Frama-C */
#include "__fc_builtin.h"
#include "assert.h"
#include "ctype.h"
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
#include "string.h"
#include "strings.h"
int main(void)
{
  int __retres;
  char fbuf[2 + 1];
  char *fbufp;
  int c1;
  int c2;
  Frama_C_make_unknown(fbuf,(size_t)2);
  fbufp = fbuf;
  while (1) {
    unsigned char tmp_6;
    tmp_6 = Frama_C_unsigned_char_interval((unsigned char)0,
                                           (unsigned char)255U);
    c1 = (int)tmp_6;
    if (! (c1 != -1)) break;
    {
      int tmp;
      char *tmp_4;
      char *tmp_5;
      tmp = isascii(c1);
      if (tmp) {
        int tmp_0;
        tmp_0 = isspace(c1);
        if (tmp_0) continue;
      }
      while (1) {
        int tmp_2;
        {
          unsigned char tmp_1;
          tmp_1 = Frama_C_unsigned_char_interval((unsigned char)0,
                                                 (unsigned char)255U);
          c2 = (int)tmp_1;
        }
        tmp_2 = isascii(c2);
        if (tmp_2) {
          int tmp_3;
          tmp_3 = isspace(c2);
          if (! tmp_3) break;
        }
        else break;
      }
      if (c2 == -1) break;
      if (c1 == '=') continue;
      else 
        if (c2 == '=') continue;
      *fbufp = (char)c1;
      tmp_4 = fbufp;
      fbufp ++;
      ;
      if ((int)*tmp_4 == '\n') goto _LOR;
      else 
        if (fbufp >= & fbuf[2]) {
          _LOR:
          {
            if (fbufp <= fbuf) fbufp = fbuf;
            else {
              fbufp --;
              ;
              if ((int)*fbufp != '\r') fbufp ++;
            }
            *fbufp = (char)0;
            fbufp = fbuf;
          }
        }
      *fbufp = (char)c2;
      tmp_5 = fbufp;
      fbufp ++;
      ;
      if ((int)*tmp_5 == '\n') goto _LOR_0;
      else 
        if (fbufp >= & fbuf[2]) {
          _LOR_0:
          {
            if (fbufp <= fbuf) fbufp = fbuf;
            else {
              fbufp --;
              ;
              if ((int)*fbufp != '\r') fbufp ++;
            }
            *fbufp = (char)0;
            fbufp = fbuf;
          }
        }
    }
  }
  if (fbufp > fbuf) *fbufp = (char)0;
  __retres = 0;
  return __retres;
}


