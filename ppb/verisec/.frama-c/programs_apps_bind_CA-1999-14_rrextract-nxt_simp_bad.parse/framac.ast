/* Generated by Frama-C */
#include "__fc_builtin.h"
#include "assert.h"
#include "ctype.h"
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
#include "string.h"
#include "strings.h"
typedef char u_char;
typedef int u_int;
int dn_expand(u_char const *msg, u_char const *eomorig,
              u_char const *comp_dn, char *exp_dn, int length);

static int rrextract(u_char *msg, int msglen, u_char *rrp, u_char *dname,
                     int namelen)
{
  int __retres;
  u_char *eom;
  u_char *cp;
  u_char *cp1;
  u_char *rdatap;
  u_int class;
  u_int type;
  u_int dlen;
  int n;
  u_char data[2 * 2 + 2];
  int tmp_0;
  size_t tmp_1;
  Frama_C_make_unknown(data,(size_t)((2 * 2 + 2) - 1));
  data[(2 * 2 + 2) - 1] = (u_char)0;
  cp = rrp;
  eom = msg + msglen;
  {
    short tmp;
    tmp = Frama_C_short_interval((short)(-32767 - 1),(short)32767);
    dlen = (u_int)tmp;
    cp += 2;
  }
  if (cp + dlen > eom) {
    __retres = -1;
    goto return_label;
  }
  n = dn_expand((u_char const *)msg,(u_char const *)eom,(u_char const *)cp,
                data,(int)sizeof(data));
  if (n < 0) {
    __retres = -1;
    goto return_label;
  }
  tmp_0 = Frama_C_interval(-2147483647 - 1,2147483647);
  if (tmp_0) {
    __retres = -1;
    goto return_label;
  }
  cp += n;
  tmp_1 = strlen((char const *)(data));
  cp1 = & data[tmp_1] + 1;
  memcpy((void *)cp1,(void const *)cp,(size_t)(dlen - n));
  __retres = 0;
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  int msglen;
  int ret;
  u_char *dp;
  u_char name[3];
  u_char msg[2 + 2];
  Frama_C_make_unknown(name,(size_t)(3 - 1));
  name[3 - 1] = (u_char)0;
  Frama_C_make_unknown(msg,(size_t)((2 + 2) - 1));
  msg[(2 + 2) - 1] = (u_char)0;
  msglen = 2 + 2;
  dp = msg;
  ret = rrextract(msg,msglen,dp,name,3);
  __retres = 0;
  return __retres;
}

int dn_expand(u_char const *msg, u_char const *eomorig,
              u_char const *comp_dn, char *exp_dn, int length)
{
  int __retres;
  int tmp;
  size_t tmp_0;
  tmp = Frama_C_interval(-2147483647 - 1,2147483647);
  if (tmp) {
    __retres = -1;
    goto return_label;
  }
  else *(exp_dn + (length - 1)) = (u_char)0;
  tmp_0 = strlen(comp_dn);
  __retres = (int)tmp_0;
  return_label: return __retres;
}


