/* Generated by Frama-C */
#include "__fc_builtin.h"
#include "assert.h"
#include "ctype.h"
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
#include "string.h"
#include "strings.h"
int readlink(char const *path, char *buf, int bufsiz);

char *getcwd(char *buf, size_t size);

char *fb_realpath(char const *path, char *resolved)
{
  char *__retres;
  int rootd;
  char *p;
  char *q;
  char wbuf[2 + 2];
  int resultcode;
  char tmp[2 + 2];
  char *tmp_0;
  wbuf[(2 + 2) - 1] = (char)0;
  tmp_0 = getcwd(resolved,(size_t)(2 + 2));
  if (tmp_0 == (char *)0) {
    __retres = (char *)0;
    goto return_label;
  }
  if ((int)*(resolved + 0) == '/') 
    if ((int)*(resolved + 1) == 0) rootd = 1; else rootd = 0;
  else rootd = 0;
  if ((int)wbuf[0] != 0) {
    size_t tmp_1;
    size_t tmp_2;
    tmp_1 = strlen((char const *)resolved);
    tmp_2 = strlen((char const *)(wbuf));
    ;
    if (((tmp_1 + tmp_2) + (size_t)rootd) + (size_t)1 > (size_t)(2 + 2)) {
      __retres = (char *)0;
      goto return_label;
    }
    if (rootd == 0) strcat(resolved,"/");
    strcat(resolved,(char const *)(wbuf));
  }
  __retres = (char *)0;
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  char pathname[2 + 2];
  char resolved[2 + 2];
  Frama_C_make_unknown(pathname,(size_t)((2 + 2) - 1));
  pathname[(2 + 2) - 1] = (char)0;
  Frama_C_make_unknown(resolved,(size_t)((2 + 2) - 1));
  resolved[(2 + 2) - 1] = (char)0;
  fb_realpath((char const *)(pathname),resolved);
  __retres = 0;
  return __retres;
}

uid_t geteuid(void);

int seteuid(uid_t euid);

int enable_signaling(void);

int delay_signaling(void);

uid_t geteuid(void)
{
  uid_t __retres;
  short tmp;
  tmp = Frama_C_short_interval((short)(-32767 - 1),(short)32767);
  __retres = (uid_t)tmp;
  return __retres;
}

int seteuid(uid_t euid)
{
  int __retres;
  int tmp;
  tmp = Frama_C_interval(-2147483647 - 1,2147483647);
  if (tmp == 0) {
    __retres = 0;
    goto return_label;
  }
  __retres = -1;
  return_label: return __retres;
}

int enable_signaling(void)
{
  int __retres;
  __retres = 0;
  return __retres;
}

int delay_signaling(void)
{
  int __retres;
  __retres = 0;
  return __retres;
}

int readlink(char const *path, char *buf, int bufsiz)
{
  int __retres;
  int n = Frama_C_interval(-2147483647 - 1,2147483647);
  if (n < bufsiz) 
    if (n >= 0) {
      __retres = n;
      goto return_label;
    }
  __retres = -1;
  return_label: return __retres;
}

char *getcwd(char *buf, size_t size)
{
  char *__retres;
  int tmp;
  tmp = Frama_C_interval(-2147483647 - 1,2147483647);
  if (tmp == 0) {
    __retres = (char *)0;
    goto return_label;
  }
  *(buf + (size - (size_t)1)) = (char)0;
  __retres = buf;
  return_label: return __retres;
}


