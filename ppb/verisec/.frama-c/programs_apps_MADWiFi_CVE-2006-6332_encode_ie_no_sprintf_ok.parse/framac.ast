/* Generated by Frama-C */
#include "__fc_builtin.h"
#include "assert.h"
#include "ctype.h"
#include "errno.h"
#include "stdarg.h"
#include "stddef.h"
#include "stdio.h"
#include "string.h"
#include "strings.h"
typedef unsigned int u_int;
typedef unsigned char u_int8_t;
static u_int encode_ie(void *buf, size_t bufsize, u_int8_t const *ie,
                       size_t ielen, char const *leader, size_t leader_len)
{
  u_int __retres;
  u_int8_t *p;
  int i;
  long tmp;
  if (bufsize < leader_len) {
    __retres = (u_int)0;
    goto return_label;
  }
  p = (u_int8_t *)buf;
  memcpy((void *)p,(void const *)leader,leader_len);
  bufsize -= leader_len;
  p += leader_len;
  if (bufsize < ielen) {
    __retres = (u_int)0;
    goto return_label;
  }
  i = 0;
  while (1) {
    if ((size_t)i < ielen) {
      if (! (bufsize > (size_t)2)) break;
    }
    else break;
    *p = (u_int8_t)'x';
    *(p + 1) = (u_int8_t)'x';
    p += 2;
    i ++;
  }
  if ((size_t)i == ielen) tmp = p - (u_int8_t *)buf; else tmp = (long)0;
  __retres = (u_int)tmp;
  return_label: return __retres;
}

int main(void)
{
  int __retres;
  u_int8_t buf[(2 + 1) + 2];
  u_int8_t ie[(((2 + 1) + 2) - 1) + 5];
  char leader[1];
  encode_ie((void *)(buf),(size_t)((2 + 1) + 2),(u_int8_t const *)(ie),
            (size_t)((((2 + 1) + 2) - 1) + 5),(char const *)(leader),
            (size_t)1);
  __retres = 0;
  return __retres;
}


