/* Generated by Frama-C */
#include "stdlib.h"
size_t volatile _rand;
size_t random_size_t(void)
{
  return _rand;
}

size_t packet_get_size_t_ok(void)
{
  size_t __retres;
  int tmp_0;
  size_t tmp;
  tmp = random_size_t();
  if (tmp) tmp_0 = 0; else tmp_0 = 123456;
  __retres = (size_t)tmp_0;
  return __retres;
}

size_t packet_get_size_t_problem(void)
{
  unsigned long tmp_0;
  size_t tmp;
  tmp = random_size_t();
  if (tmp) tmp_0 = 18446744073709551615UL / (unsigned long)2 + (unsigned long)1;
  else tmp_0 = (unsigned long)0;
  return tmp_0;
}

char *packet_get_string(char const *s)
{
  char *__retres;
  __retres = (char *)"string";
  return __retres;
}

int main(void)
{
  int __retres;
  char **response;
  size_t nresp = packet_get_size_t_ok();
  if (nresp > (size_t)0) {
    response = (char **)malloc(nresp * sizeof(char *));
    if (! response) exit(1);
    {
      size_t i = (size_t)0;
      while (i < nresp) {
        *(response + i) = packet_get_string((char const *)0);
        i ++;
      }
    }
    free((void *)response);
  }
  nresp = packet_get_size_t_problem();
  if (nresp > (size_t)0) {
    response = (char **)malloc(nresp * sizeof(char *));
    if (! response) exit(1);
    {
      size_t i_0 = (size_t)0;
      while (i_0 < nresp) {
        *(response + i_0) = packet_get_string((char const *)0);
        i_0 ++;
      }
    }
    free((void *)response);
  }
  __retres = 0;
  return __retres;
}


